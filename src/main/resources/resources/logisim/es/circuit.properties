#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Calculando tabla de verdad en lugar de la expresi\u00f3n debido a %s.
analyzeCircularError = Referencia circular detectada; calculando tabla de verdad en su lugar.
analyzeConflictError = Salidas conflictivas detectadas; calculando tabla de verdad en su lugar.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = Orientaci\u00f3n del circuito
circuitAnchor = Referencia
#
# appear/AppearancePort.java
#
circuitPort = Puerto
#
# appear/DynamicElement.java
#
circuitLabelBottom = Abajo
circuitLabelCenter = Centro
circuitLabelLeft = Izquierda
circuitLabelNone = Sin etiqueta
circuitLabelRight = Derecha
circuitLabelTop = Arriba
circuitShowLabelAttr = Posici\u00f3n de la etiqueta
#
# Circuit.java
#
changeComponentAttributesAction = Acci\u00f3n que cambia un atributo de un componente
ComponentLabelCollisionError = Un componente en el circuito tiene la misma etiqueta que el nombre del componente reci\u00e9n colocado. La etiqueta ha sido eliminada.
ComponentLabelNameError = La etiqueta se corresponde con un nombre de componente usado en el circuito.\nPor favor, usa etiquetas distintas a los nombres de componentes.
UsedLabelNameError = Ya existe un componente con esta etiqueta.\nPor favor, usa etiquetas \u00fanicas en el circuito.
#
# CircuitAttributes.java
#
circuitAppearanceAttr = Apariencia
circuitCustomAppearance = A medida
circuitIsVhdl = \u00bfReferencia a arquitectura VHDL?
circuitLabelAttr = Etiqueta compartida
circuitLabelDirAttr = Orientaci\u00f3n de la etiqueta compartida
circuitLabelFontAttr = Fuente de la etiqueta compartida
circuitLabelLocAttr = Localizaci\u00f3n de la etiqueta
circuitName = Nombre del circuito
circuitNamedBoxFixedSize = Utilizar un tama\u00f1o de caja fijo
circuitVhdlPath = Localizaci\u00f3n del archivo de arquitectura VHDL
EmptyNameError = Cada circuito necesita un nombre, no se permiten circuitos sin nombre. Por favor, usa un nombre para el circuito.
#
# CircuitMutation.java
#
unknownChangeAction = Cambiar circuito
#
# RadixOption.java
#
radix10Signed = Decimal con signo
radix10Unsigned = Decimal sin signo
radix16 = Hexadecimal
radix2 = Binario
radix8 = Octal
radixAttr = Base
#
# Splitter.java
#
splitterCombinedTip = Extremo agrupado del separador
splitterSplit0Tip = No hay bits en el extremo separado
splitterSplit1Tip = Bit %s del extremo separado
splitterSplitManyTip = Bits %s del extremo separado
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Apariencia
splitterAppearanceCenter = Centrado
splitterAppearanceLeft = Izquierda-abajo
splitterAppearanceLegacy = Cl\u00e1sico
splitterAppearanceRight = Derecha-arriba
splitterBitAttr = Bit %s
splitterBitNone = Ninguno
splitterBitWidthAttr = Bits de entrada
splitterFanOutAttr = Desplegable
splitterSpacing = Distancia
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Distribuir de forma ascendente
splitterDistributeDescending = Distribuir de forma descendente
#
# SplitterFactory.java
#
splitterComponent = Separador
#
# SubcircuitFactory.java
#
subcircuitViewItem = Ver %s
#
# Wire.java
#
wireDirectionAttr = Direcci\u00f3n
wireDirectionHorzOption = Horizontal
wireDirectionVertOption = Vertical
wireLengthAttr = Longitud
#
# WireFactory.java
#
wireComponent = Cable


