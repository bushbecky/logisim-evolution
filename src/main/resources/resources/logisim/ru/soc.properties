#
# bus/SocBus.java
#
SocBusComponent = \u0441\u0438\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u0448\u0438\u043d\u044b SOC
#
# bus/SocBusAttributes.java
#
SocBusTraceSize = \u0420\u0430\u0437\u043c\u0435\u0440 \u0441\u043b\u0435\u0434\u0430:
SocBusTraceVisable = \u0421\u043b\u0435\u0434\u044b \u0432\u0438\u0434\u043d\u044b:
#
# bus/SocBusMenuProvider.java
#
insertTrans = \u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u043f\u043e \u0448\u0438\u043d\u0435
SocBusMemMap = \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u0430\u0440\u0442\u0443 \u043f\u0430\u043c\u044f\u0442\u0438
SocBusTraceWindow = \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0443 \u0430\u0432\u0442\u043e\u0431\u0443\u0441\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439
SocInsertTransWindowTitle = \u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0432 \u0430\u0432\u0442\u043e\u0431\u0443\u0441:
TraceWindowTitleDoubleClickOnTraceToRemoveTrace = \u041e\u043a\u043d\u043e \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0438 \u0448\u0438\u043d\u044b (\u0434\u0432\u0430\u0436\u0434\u044b \u0449\u0435\u043b\u043a\u043d\u0438\u0442\u0435 \u043f\u043e \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0435, \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0435\u0435)
#
# data/SocBusInfo.java
#
SocBusNotConnected = \u041d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a \u0448\u0438\u043d\u0435
#
# data/SocBusStateInfo.java
#
SocBusNoTrace = \u041d\u0435\u0442 \u0441\u043b\u0435\u0434\u043e\u0432
SocMemMapWindowTitle = \u041a\u0430\u0440\u0442\u0430 \u043f\u0430\u043c\u044f\u0442\u0438 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0431\u0443\u0441\u0430:
SocMemoryMapOk = \u0411\u043b\u0438\u0437\u043a\u043e
SocMemoryMapTitle = \u041a\u0430\u0440\u0442\u0430 \u043f\u0430\u043c\u044f\u0442\u0438 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439 \u0446\u0432\u0435\u0442 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043f\u0435\u0440\u0435\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u0430\u043c\u044f\u0442\u0438):
#
# data/SocBusTransaction.java
#
SocBusStateMaster = \u0418\u043d\u0438\u0446\u0438\u0430\u0442\u043e\u0440
SocBusStateNoDataMax10chars = \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445
SocBusStateSlave = \u041e\u0442\u0432\u0435\u0447\u0430\u0439:
SocBusStateTraceIndex = \u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u2116..:
SocTransactionByteAccesNoSupport = Slave \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0431\u0430\u0439\u0442\u0430\u043c.
SocTransactionByteAccesNoSupportShort = \u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0431\u0430\u0439\u0442\u0430\u043c
SocTransactionHalfWordAccesNoSupport = Slave \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0444\u0430\u0439\u043b\u0430\u043c \u0434\u043b\u0438\u043d\u043e\u0439 \u0432 \u043f\u043e\u043b\u0441\u043b\u043e\u0432\u0430.
SocTransactionHalfWordAccesNoSupportShort = \u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0413\u0412\u0421
SocTransactionMisallignedAddress = \u0412\u0435\u0434\u043e\u043c\u044b\u0439 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0432\u044b\u0440\u043e\u0432\u043d\u0435\u043d\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441.
SocTransactionMisallignedAddressShort = \u041c\u0438\u0441\u0430\u043b. \u0410\u0434\u0434\u0440
SocTransactionMultipleSlaveAnswers = \u041d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0431\u043e\u0432 \u043e\u0442\u0432\u0435\u0442\u0438\u043b\u0438 \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043a\u0430\u0440\u0442\u0443 \u043f\u0430\u043c\u044f\u0442\u0438 \u0432\u0430\u0448\u0438\u0445 \u0432\u0435\u0434\u043e\u043c\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432.
SocTransactionMultipleSlaveAnswersShort = \u041d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0431\u043e\u0432
SocTransactionNoBusConnected = \u0412\u0435\u0434\u0443\u0449\u0438\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u043d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a \u0448\u0438\u043d\u0435 Soc Bus. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u0432\u0435\u0434\u0443\u0449\u0435\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443 \u0448\u0438\u043d\u044b.
SocTransactionNoBusConnectedShort = \u041d\u0435\u0442 \u0430\u0432\u0442\u043e\u0431\u0443\u0441\u0430
SocTransactionNoneAtomicRW = \u041d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u043f\u043e \u0430\u0442\u043e\u043c\u043d\u043e\u043c\u0443 \u0447\u0442\u0435\u043d\u0438\u044e/\u0437\u0430\u043f\u0438\u0441\u0438. \u042d\u0442\u043e \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e.
SocTransactionNoneAtomicRWShort = \u041d\u0435\u0442 \u0430\u0442\u043e\u043c\u043d\u044b\u0445 \u0420\u0410\u041e
SocTransactionNoRespons = \u041d\u0438 \u043e\u0434\u0438\u043d \u0438\u0437 \u043f\u043e\u0434\u0447\u0438\u043d\u0435\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u043d\u0435 \u043e\u0442\u0432\u0435\u0442\u0438\u043b \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0430\u0434\u0440\u0435\u0441 \u043f\u0430\u043c\u044f\u0442\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043a\u0430\u0440\u0442\u0443 \u043f\u0430\u043c\u044f\u0442\u0438 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b.
SocTransactionNoResponsShort = \u041d\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0430
SocTransactionNoSlavesAttached = \u0428\u0438\u043d\u0430, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u0430\u044f \u043a \u0432\u0435\u0434\u0443\u0449\u0435\u043c\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0443, \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0432\u0435\u0434\u043e\u043c\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0438\u0442\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0431\u043e\u0432 \u043a \u0430\u0432\u0442\u043e\u0431\u0443\u0441\u0443.
SocTransactionNoSlavesAttachedShort = \u041d\u0435\u0442 \u0440\u0430\u0431\u043e\u0432
SocTransactionReadOnlyAccessError = \u0412\u0435\u0434\u043e\u043c\u044b\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u0435\u043d\u0438\u0435 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443.
SocTransactionReadOnlyAccessErrorShort = \u0422\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f
SocTransactionRegisterDoesNotExist = Slave \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443.
SocTransactionRegisterDoesNotExistShort = \u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430
SocTransactionSuccessfull = \u041e\u0448\u0438\u0431\u043a\u0438 \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e.
SocTransactionSuccessfullShort = \u0423\u0441\u043f\u0435\u0445
SocTransactionUnknownError = \u0421\u0442\u0440\u0430\u043d\u043d\u043e, \u043d\u043e \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0442\u0438 \u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0443 \u0432 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u043a\u0435.
SocTransactionUnknownErrorShort = \u0411\u0423\u0413!
SocTransactionWordAccesNoSupport = Slave \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u043b\u043e\u0432\u0430\u043c.
SocTransactionWordAccesNoSupportShort = \u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u043b\u043e\u0432\u0430\u043c
SocTransactionWriteOnlyAccessError = Slave \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0447\u0442\u0435\u043d\u0438\u0435 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443.
SocTransactionWriteOnlyAccessErrorShort = \u041f\u0438\u0448\u0438\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e
#
# data/SocMemMapModel.java
#
SocMemMapEmpty = \u041f\u0443\u0441\u0442\u043e (\u043d\u0435\u0442 \u0440\u0430\u0431\u043e\u0432)
SocMemMapEndAddress = \u041a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441:
SocMemMapSlaveName = \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430:
SocMemMapStartAddress = \u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441:
#
# data/SocSimulationManager.java
#
SocBusManagerSelectBus = \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0448\u0438\u043d\u0443 \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0443
SocBusSelectAttr = \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u0430\u044f \u0448\u0438\u043d\u0430
SocBusSelectAttrClick = \u041d\u0430\u0436\u043c\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c
SocManagerNoBusses = \u0410\u0432\u0442\u043e\u0431\u0443\u0441\u043e\u0432 \u043d\u0435\u0442, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 SOC-\u0430\u0432\u0442\u043e\u0431\u0443\u0441 \u043a \u0441\u0445\u0435\u043c\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439.
#
# data/SocUpMenuProvider.java
#
ProcReadElfLoadedAndEntrySet = \u0423\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b \u044d\u043b\u044c\u0444\u0438\u0439\u0441\u043a\u0438\u0439 \u0444\u0430\u0439\u043b \u0432 \u043f\u0430\u043c\u044f\u0442\u044c.\n\u0422\u043e\u0447\u043a\u0430 \u0432\u0445\u043e\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u043d\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440.\n\n\u0412\u0430\u0436\u043d\u043e:\n   \u0422\u0430\u043a \u043a\u0430\u043a \u0432 \u0434\u0435\u043b\u0435 \u042d\u043b\u044c\u0444\u0430 \u043d\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0435\u043a\u0442\u043e\u0440\u0430\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439.\n   \u0442\u044b \u0434\u043e\u043b\u0436\u0435\u043d \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0441\u0430\u043c!
SocUpMenuAsmWindow = \u041e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 \u0430\u0441\u0441\u0435\u043c\u0431\u043b\u0435\u0440
SocUpMenuCpuAsmWindowTitle = \u0430\u0441\u0441\u0435\u043c\u0431\u043b\u0435\u0440 \u0434\u043b\u044f \u041a\u041f\u041e:
SocUpMenuCpuProgramWindowTitle = \u0420\u0430\u0437\u0431\u043e\u0440\u0449\u0438\u043a \u0434\u043b\u044f \u041a\u041f\u041e :
SocUpMenuCpuStateWindowTitle = \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 :
SocUpMenuErrorReadingElfTitle = \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u044d\u043b\u044c\u0444\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430
SocUpMenuReadElf = \u0427\u0438\u0442\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u044d\u043b\u044c\u0444\u0430
SocUpMenuSelectElfFile = \u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0439\u043b \u044d\u043b\u044c\u0444\u0430 \u0434\u043b\u044f \u0438\u043c\u043f\u043e\u0440\u0442\u0430
SocUpMenuShowProgram = \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443
SocUpMenuShowState = \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430
#
# data/SocUpSimulationState.java
#
SocUpSimHalt = \u041c\u0430\u0441\u0441\u0438\u0432\u043d\u044b\u0439
SocUpSimHaltBreak = \u0422\u043e\u0447\u043a\u0430 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0430
SocUpSimHaltError = \u041e\u0448\u0438\u0431\u043a\u0430
SocUpSimRunning = \u0411\u0435\u0433\u0443\u0449\u0438\u0439
SocUpSimStateLabel = \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0448\u0442\u0430\u0442:
SocUpSimstateStart = \u041d\u0430\u0447\u0430\u0442\u044c
SocUpSimstateStop = \u041f\u0430\u0443\u0437\u0430
SocUpUnknown = \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439
#
# file/ElfHeader.java
#
ElfHeaderEIClassError = \u041d\u0435 32 \u0438\u043b\u0438 64-\u0431\u0438\u0442\u043d\u044b\u0439 \u044d\u043b\u044c\u0444\u0438\u0439\u0441\u043a\u0438\u0439 \u0444\u0430\u0439\u043b.
ElfHeaderEIDataError = \u041d\u0435 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0444\u0430\u0439\u043b \u0432 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0435 \u042d\u043d\u0434\u0438\u0430\u043d\u0430.
ElfHeaderIncorrectEISize = \u0420\u0430\u0437\u043c\u0435\u0440 EI-\u0441\u0435\u043a\u0446\u0438\u0438 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439.
ElfHeaderIncorrectESize = \u0420\u0430\u0437\u043c\u0435\u0440 E-\u0441\u0435\u043a\u0446\u0438\u0438 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439.
ElfHeaderIncorrectMagic = \u0424\u0430\u0439\u043b \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u044d\u043b\u044c\u0444\u0438\u0439\u0441\u043a\u043e\u0439 \u043c\u0430\u0433\u0438\u0438; \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u044d\u0442\u043e \u043d\u0435 \u044d\u043b\u044c\u0444\u0438\u0439\u0441\u043a\u0438\u0439 \u0444\u0430\u0439\u043b.
ElfHeaderNoErrors = \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439
ElfHeaderReadingFileError = \u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430
ElfHeaderUnknownArchitecture = \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430
#
# file/ElfProgramHeader.java
#
ProgHeaderNotFound = \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d.
ProgHeaderReadError = \u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b.
ProgHeaderSizeError = \u041d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b.
ProgHeaderSuccess = \u0423\u0441\u043f\u0435\u0445
#
# file/ElfSectionHeader.java
#
ElfSectHeadMultiStringtabError = \u041d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0446, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445.
ElfSectHeadMultiSymtabError = \u041d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0430\u0431\u043b\u0438\u0446 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445;
ElfSectHeadNotFound = \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441\u0435\u043a\u0446\u0438\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d.
ElfSectHeadReadError = \u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0430.
ElfSectHeadSizeError = \u041d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 \u0441\u0435\u043a\u0446\u0438\u0438.
ElfSectHeadStingIdxError = \u0418\u043d\u0434\u0435\u043a\u0441 \u0441\u0442\u0440\u043e\u043a\u0438 \u043e\u0448\u0438\u0431\u043a\u0438.
ElfSectHeadStingNotFound = \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0435\u043a\u0446\u0438\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e.
ElfSectHeadStingReadError = \u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b.
ElfSectHeadStingTypeError = \u041e\u0448\u0438\u0431\u043a\u0430 \u0442\u0438\u043f\u0430 \u0441\u0442\u0440\u043e\u043a\u0438.
ElfSectHeadSuccess = \u0423\u0441\u043f\u0435\u0445
ElfSymTableNotFound = \u041d\u0435 \u0441\u043c\u043e\u0433 \u043d\u0430\u0439\u0442\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.
ElfSymTableReadError = \u041d\u0435 \u0441\u043c\u043e\u0433 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.
#
# file/ProcessorReadElf.java
#
ProcReadElf64BitNotSupportedYet = Logisim \u043f\u043e\u043a\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 64-\u0431\u0438\u0442\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u044d\u043b\u044c\u0444\u043e\u0432.
ProcReadElfArchError = \u0424\u0430\u0439\u043b Elf \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 "%s", \u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 "%s".
ProcReadElfEndianMismatch = \u042d\u043d\u0434\u0438\u0430\u043d\u0430 \u043d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f, \u0444\u0430\u0439\u043b elf "%s", \u0432 \u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u043b "%s".
ProcReadElfErrorOpeningFile = \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u044d\u043b\u044c\u0444-\u0444\u0430\u0439\u043b
ProcReadElfLoadableSectionNotFound = \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u044b\u0439 \u0440\u0430\u0437\u0434\u0435\u043b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0444\u0430\u0439\u043b\u0435 elf.
ProcReadElfLoadableSectionReadError = \u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u043e\u0439 \u0441\u0435\u043a\u0446\u0438\u0438.
ProcReadElfLoadableSectionSizeError = \u041d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u043e\u0433\u043e \u0443\u0447\u0430\u0441\u0442\u043a\u0430.
ProcReadElfLoadableSectionTooBig = \u0420\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u043e\u0433\u043e \u0443\u0447\u0430\u0441\u0442\u043a\u0430 \u0431\u043e\u043b\u044c\u0448\u0435, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u043a\u043e\u0439.
ProcReadElfMemoryError = \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043f\u0430\u043c\u044f\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0430.\n\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u043f\u0430\u043c\u044f\u0442\u0438 SOC, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0433\u043e \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u0430\u043c\u044f\u0442\u0438:\n%s...%s...%s
ProcReadElfNotExecutable = Elf-\u0444\u0430\u0439\u043b \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c.
ProcReadElfSuccess = \u0423\u0441\u043f\u0435\u0445
#
# gui/AssemblerPanel.java
#
AsmPanAmsFileExtention = \u041c\u043e\u043d\u0442\u0430\u0436\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b (.asm,.S.)
AsmPanAssemble = \u0421\u0431\u043e\u0440\u043a\u0430 \u043a\u043e\u0434\u0430 (ALT-A)
AsmPanDocumentChangedSave = \u0412 \u0432\u0430\u0448\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435 \u0435\u0441\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0445?
AsmPanErrorCreateFile = \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0431\u043e\u0440\u043e\u0447\u043d\u044b\u0439 \u0444\u0430\u0439\u043b.
AsmPanErrorReadingFile = \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0444\u0430\u0439\u043b
AsmPanNextError = \u041f\u0435\u0440\u0435\u0445\u043e\u0434 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0435 (CTRL-N)
AsmPanOpenFile = \u0427\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 (CTRL-L)
AsmPanPreviousError = \u041f\u0435\u0440\u0435\u0445\u043e\u0434 \u043a \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0435 (CTRL-P)
AsmPanReadAsmFile = \u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f
AsmPanRun = \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043e\u0434 (ALT-R)
AsmPanSaveAsmFile = \u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f
AsmPanSaveFile = \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0444\u0430\u0439\u043b (CTRL-S)
AsmPanSaveFileAs = \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u043a\u0430\u043a
AsmPanSaveFirstBeforeOpen = \u0412 \u0432\u0430\u0448\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435 \u0435\u0441\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f.\n\u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u0445 \u043f\u0435\u0440\u0435\u0434 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430?
AssemblerAssembleSuccess = \u0423\u0441\u043f\u0435\u0445!\n\u041e\u0448\u0438\u0431\u043e\u043a \u0432 \u043a\u043e\u0434\u0435 \u043d\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043e.
AssemblerRunSuccess = \u0423\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043c\u044f\u0442\u044c.\n\u0427\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u044d\u0442\u043e\u043c:\na) \u0412\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0435 \u0433\u0430\u043b\u043e\u0447\u043a\u0438\nb) \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440 \u0432 \u0440\u0435\u0436\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u044b
AssemblerUnableToDownload = \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043c\u044f\u0442\u0438,\n\u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0430\u043c\u044f\u0442\u0438.\n\u0432 \u043d\u0443\u0436\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 \u043f\u0430\u043c\u044f\u0442\u0438.
#
# gui/BreakpointPanel.java
#
RV32imAsmLineIndicator = \u041b\u0438\u043d\u0438\u044f %d \u043e\u0442 %d
RV32imRemoveBreakPoint = \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u0440\u0430\u0437\u0440\u044b\u0432\u0430
RV32imSetBreakpoint = \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0430
#
# gui/BusTransactionInsertionGui.java
#
SocTransInsAddress = \u0410\u0434\u0440\u0435\u0441 \u0430\u0432\u0442\u043e\u0431\u0443\u0441\u0430: 0x
SocTransInsAtomicRequest = \u0410\u0442\u043e\u043c\u043d\u0430\u044f \u0441\u0434\u0435\u043b\u043a\u0430
SocTransInsByteAccess = \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0431\u0430\u0439\u0442\u0430
SocTransInsHalfWordAccess = \u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0441 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u043e\u0439 \u0441\u043b\u043e\u0432\u0430 (2 \u0431\u0430\u0439\u0442\u0430)
SocTransInsInputData = \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438: 0x
SocTransInsInsertTransaction = \u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0432 \u0448\u0438\u043d\u0443.
SocTransInsManual = \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e
SocTransInsReadData = \u0414\u0430\u043d\u043d\u044b\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u044b:
SocTransInsReadRequest = \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0448\u0438\u043d\u044b
SocTransInsTransResultTitle = \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438:
SocTransInsWordAccess = \u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0441\u043b\u043e\u0432\u0430 (4 \u0431\u0430\u0439\u0442\u0430)
SocTransInsWriteRequest = \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u0448\u0438\u043d\u044b
#
# gui/CpuDrawSupport.java
#
Rv32imAsmInstruction = \u0421\u0431\u043e\u0440\u043a\u0430:
Rv32imBinInstruction = \u041e\u043f\u043a\u043e\u0434:
Rv32imEmptyTrace = \u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0441\u043b\u0435\u0434\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f
Rv32imExecutionTrace = \u0422\u0440\u0430\u0441\u0441\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f (\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441\u0432\u0435\u0440\u0445\u0443):
Rv32imProgramCounter = \u041f\u041a:
Rv32imRegisterFile = \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0444\u0430\u0439\u043b:
#
# gui/SocCPUShape.java
#
RV32ShapeSimControl = \u041c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f
#
# jtaguart/JtagUart.java
#
JtagUartClearKeyb = \u0427\u0435\u0442\u043a\u0430\u044f \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u0430
JtagUartKeybAvailable = \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b
JtagUartKeybData = \u0414\u0430\u043d\u043d\u044b\u0435 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b
JtagUartKeybReadEnable = \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0447\u0442\u0435\u043d\u0438\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b
JtagUartTtyClear = TTY \u044f\u0441\u043d\u043e
JtagUartTtyData = \u0434\u0430\u043d\u043d\u044b\u0435 TTY
JtagUartTtyWrite = \u0417\u0430\u043f\u0438\u0441\u044c \u0434\u0430\u043d\u043d\u044b\u0445 TTY
Rv32imClockInput = \u0412\u0445\u043e\u0434 \u0447\u0430\u0441\u043e\u0432
Rv32imResetInput = \u0412\u0445\u043e\u0434 \u0441\u0431\u0440\u043e\u0441\u0430
SocJtagUartComponent = \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 Jtag Uart
SocPioIrqOutput = \u0412\u044b\u0445\u043e\u0434 Irq
#
# jtaguart/JtagUartAttributes.java
#
JtagSize1024 = 1k
JtagSize128 = 128
JtagSize16 = 16
JtagSize16384 = 16k
JtagSize2048 = 2k
JtagSize256 = 256
JtagSize32 = 32
JtagSize32768 = 32k
JtagSize4096 = 4k
JtagSize512 = 512
JtagSize64 = 64
JtagSize8 = 8
JtagSize8192 = 8k
JtagUartReadIrqThreshold = \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0440\u043e\u0433\u0430 IRQ
JtagUartWriteIrqThreshold = \u0417\u0430\u043f\u0438\u0441\u044c \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f IRQ
UartJtagREADFifoSize = \u0427\u0438\u0442\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u043c\u0435\u0440 FIFO:
UartJtagWriteFifoSize = \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0440\u0430\u0437\u043c\u0435\u0440 FIFO:
VgaStartAddress = \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441:
#
# memory/SocMemory.java
#
SocMemBase = \u0411\u0430\u0437\u0430
SocMemSizeStr = \u0420\u0430\u0437\u043c\u0435\u0440
#
# memory/SocMemoryAttributes.java
#
SocMemSize = \u0428\u0438\u0440\u0438\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445:
SocMemStartAddress = \u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441:
#
# nios2/Nios2.java
#
Nios2A = A
Nios2B = B
Nios2C = C
Nios2Component = \u0421\u0438\u043c\u0443\u043b\u044f\u0442\u043e\u0440 Nios2s
Nios2Dataa = \u0414\u0430\u043d\u043d\u044b\u0435 A
Nios2Datab = \u0414\u0430\u043d\u043d\u044b\u0435 B
Nios2Done = \u0413\u043e\u0442\u043e\u0432\u043e
Nios2N = N
Nios2ReadRa = \u041f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0420\u0430
Nios2ReadRb = \u0427\u0438\u0442\u0430\u0439\u0442\u0435 Rb
Nios2Result = \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442
Nios2Start = \u041d\u0430\u0447\u0430\u0442\u044c
Nios2WriteRc = \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 Rc
#
# nios2/Nios2Attributes.java
#
nios2BreakVector = Break Vector
#
# nios2/Nios2CustomInstructions.java
#
AssemblerExpectedFourArguments = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0435 \u0447\u0435\u0442\u044b\u0440\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430
Nios2DonePinError = \u0413\u043e\u0442\u043e\u0432\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0438\u043b\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d.\n \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0433\u043e\u0442\u043e\u0432\u0443\u044e \u0431\u0443\u043b\u0430\u0432\u043a\u0443.
#
# nios2/Nios2OtherControlInstructions.java
#
AssemblerExpectedZeroOrOneArgument = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0438\u043b\u0438 \u043e\u0434\u0438\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442
Nios2AssemblerExpectedBracketedRegister = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 (r1)
Nios2AssemblerExpectedImmediateIndexedRegister = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 5(r1)
Nios2CannotUseControlRegister = \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u044d\u0442\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435
Nios2CannotUseCustomRegister = \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0432 \u044d\u0442\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435
Nios2ExpectedControlRegister = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, ctl4)
#
# nios2/Nios2ProgramControlInstructions.java
#
AssemblerExpextedImmediateOrLabel = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u044f\u0440\u043b\u044b\u043a
#
# nios2/Nios2State.java
#
Nios2Bstatus = \u0441\u0442\u0430\u0442\u0443\u0441
Nios2Estatus = \u0441\u0442\u0430\u0442\u0443\u0441
Nios2Status = \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435
#
# pio/PioAttributes.java
#
SicPioIrqType = \u0418\u0440\u043a-\u0442\u0438\u043f:
SocPioAnyEdge = \u041b\u044e\u0431\u043e\u0439 \u043a\u0440\u0430\u0439
SocPioBidir = \u0414\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 (\u0442\u0440\u0435\u0445\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435) \u043f\u043e\u0440\u0442\u044b
SocPioCaptureEdge = \u0422\u0438\u043f \u0437\u0430\u0445\u0432\u0430\u0442\u0430:
SocPioDirection = \u041d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435
SocPioFallingEdge = \u041f\u0430\u0434\u0430\u044e\u0449\u0430\u044f \u043a\u0440\u043e\u043c\u043a\u0430
SocPioGenIRQ = IRQ \u0432\u043a\u043b\u044e\u0447\u0435\u043d:
SocPioInout = \u041a\u0430\u043a \u0432\u0445\u043e\u0434\u043d\u043e\u0439, \u0442\u0430\u043a \u0438 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u043f\u043e\u0440\u0442\u044b
SocPioInputCaptureBit = \u0417\u0430\u0445\u0432\u0430\u0442 \u0431\u0438\u0442\u043e\u0432 \u043e\u0447\u0438\u0441\u0442\u043a\u0438:
SocPioInputOnly = \u0422\u043e\u043b\u044c\u043a\u043e \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u043f\u043e\u0440\u0442\u044b
SocPioInputsSyncCapture = \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f. \u0437\u0430\u0445\u0432\u0430\u0442:
SocPioIrQEdge = \u0413\u0440\u0430\u043d\u0438\u0446\u0430
SocPioIrqLevel = \u0423\u0440\u043e\u0432\u0435\u043d\u044c
SocPioOutputIndividualBits = \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430/\u043e\u0447\u0438\u0441\u0442\u043a\u0430 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0431\u0438\u0442\u0430:
SocPioOutputOnly = \u0422\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u043f\u043e\u0440\u0442\u044b
SocPioOutputResetValue = \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0431\u0440\u043e\u0441\u0430 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435:
SocPioRisingEdge = \u041f\u043e\u0434\u043d\u0438\u043c\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u043a\u0440\u043e\u043c\u043a\u0430
#
# pio/PioMenu.java
#
PioMenuBidirFunctionsRemark = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0434\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0438\u043b\u0438 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\n * a 1 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u0438\u0442 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u044f. \u0431\u0438\u0442 - \u044d\u0442\u043e \u0432\u044b\u0445\u043e\u0434, \u0430 0 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u044d\u0442\u043e \u0432\u0445\u043e\u0434\n * \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0438\u0442\u044b \u043d\u0438\u0436\u043d\u0435\u0433\u043e %s.\n */
PioMenuCaptureAll = \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0431\u0438\u0442\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0437\u0430\u0445\u0432\u0430\u0442\u0430 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 "value".
PioMenuCaptureAny = \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u043e\u0434\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0442 0 \u0434\u043e 1 \u0438\u043b\u0438 \u043e\u0442 1 \u0434\u043e 0.
PioMenuCaptureBit = \u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0431\u0438\u0442\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0437\u0430\u0445\u0432\u0430\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 "value" \u0440\u0430\u0432\u043d\u044b 1
PioMenuCaptureFalling = \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u043e\u0434\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0442 1 \u0434\u043e 0.
PioMenuCaptureRising = \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u043e\u0434\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0442 0 \u0434\u043e 1
PioMenuEdgeCaptureRemark = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0437\u0430\u0445\u0432\u0430\u0442\u0430 \u043a\u0440\u0430\u0451\u0432 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0447\u0438\u0449\u0435\u043d \u0438\u043b\u0438 \u0441\u0447\u0438\u0442\u0430\u043d\n * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043a\u0440\u0430\u044f \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e.\n * \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0432\u0445\u043e\u0434 \u0438\u043c\u0435\u0435\u0442 \u0448\u043b\u044f\u043f\u0443 %s,\n * \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0432\u0445\u043e\u0434 \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0441\u044f.\n *\n * \u0417\u0430\u043f\u0438\u0441\u044c \u0432 \u044d\u0442\u043e\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0431\u0443\u0434\u0435\u0442 %s.\n * \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0438\u0442\u044b \u043d\u0438\u0436\u043d\u0435\u0433\u043e %s.\n */
PioMenuInputDataFunctionRemark = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f PIO \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438\n * \u0437\u0430\u0447\u0438\u0442\u0430\u0439.\n * \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n * \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0438\u0442\u044b \u043d\u0438\u0436\u043d\u0435\u0433\u043e %s\n */
PioMenuIrqEdge = \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0431\u0438\u0442 \u0432 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435 \u0437\u0430\u0445\u0432\u0430\u0442\u0430
PioMenuIrqLevel = \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0432\u0445\u043e\u0434
PioMenuMaskFunctionsRemark = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u043c\u0430\u0441\u043a\u0438 \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0438\u043b\u0438 \u0441\u0447\u0438\u0442\u0430\u043d.\n * 1 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u0435.\n * \u0435\u0441\u043b\u0438 %s \u0440\u0430\u0432\u043d\u043e 1.\n * \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0438\u0442\u044b \u043d\u0438\u0436\u043d\u0435\u0433\u043e %s.\n */
PioMenuOutClearRemark = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0431\u0438\u0442\u044b, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 1 \u0431\u0438\u0442 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 "value", \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\n * \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0432\u044b\u0445\u043e\u0434 0\n * \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0438\u0442\u044b \u043d\u0438\u0436\u043d\u0435\u0433\u043e %s.\n */
PioMenuOutputDataFunctionRemark = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f PIO \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438\n * \u0413\u043e\u0442\u043e\u0432\u043e.\n * \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0435 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 "\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435".\n * \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0438\u0442\u044b \u043d\u0438\u0436\u043d\u0438\u0445 %s \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0432 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442 \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435".\n */
PioMenuOutSetRemark = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0431\u0438\u0442\u044b, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 1 \u0431\u0438\u0442 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 "value", \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\n * \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0432\u044b\u0445\u043e\u0434\u0443 1\n * \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0438\u0442\u044b \u043d\u0438\u0436\u043d\u0435\u0433\u043e %s.\n */
#
# pio/SocPio.java
#
SocPioBidirPinx = \u0411\u0438\u0434\u0438\u0440 \u0431\u0438\u0442 %s
SocPioBidirs = \u0414\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0448\u0442\u0438\u0444\u0442\u044b
SocPioComponent = \u041f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0432\u0445\u043e\u0434\u043e\u0432/\u0432\u044b\u0445\u043e\u0434\u043e\u0432
SocPioInputPinx = \u0412\u0445\u043e\u0434\u043d\u043e\u0439 \u0431\u0438\u0442 %s
SocPioInputs = \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u044b
SocPioOutputPinx = \u0412\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0431\u0438\u0442 %s
SocPioOutputs = \u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u044b
SocPioResetInput = \u0412\u0445\u043e\u0434 \u0441\u0431\u0440\u043e\u0441\u0430
#
# rv32im/RV32im_M_ExtensionInstructions.java
#
AssemblerExpectedRegister = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440
AssemblerExpectedThreeArguments = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0435 \u0442\u0440\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430
AssemblerUnknownRegister = \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0440\u0435\u0435\u0441\u0442\u0440
#
# rv32im/Rv32im_riscv.java
#
Rv32imComponent = \u0421\u0438\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u043c\u0433\u043d\u043e\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u043c\u0435\u043d\u0430 \u043c\u0433\u043d\u043e\u0432\u0435\u043d\u043d\u044b\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 Risc V
Rv32imIrqInput = \u0412\u0445\u043e\u0434 IRQ %s
#
# rv32im/RV32im_state.java
#
RV32imBreakPointReached = \u0418\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438\u0437-\u0437\u0430 \u0442\u043e\u0447\u043a\u0438 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0430, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u0435.
RV32imFetchExecutionError = \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b
RV32imFetchInvalidInstruction = \u041d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0430.
RV32imFetchInvInstrAsm = \u041d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f!
RV32imFetchTransaction = -> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.
SocHiddenForFasterSimulation = \u0421\u043a\u0440\u044b\u0442\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f
#
# rv32im/RV32imAttributes.java
#
rv32ExceptionVector = \u0412\u0435\u043a\u0442\u043e\u0440 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f
rv32imIrqWidth = \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0438\u043d\u0438\u0439 IRQ
rv32ResetVector = \u0412\u0435\u043a\u0442\u043e\u0440 \u0441\u0431\u0440\u043e\u0441\u0430
rv32StateVisable = \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0432\u0438\u0434\u043d\u043e:
#
# rv32im/RV32imControlTransferInstructions.java
#
AssemblerExpectedNoArguments = \u041d\u0435 \u043e\u0436\u0438\u0434\u0430\u043b \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432
AssemblerExpectedOneArgument = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043e\u0434\u0438\u043d \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442
Rv32imAssemblerExpectedOneOrTwoArguments = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u0434\u0432\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430
Rv32imAssemblerExpectedTwoOrThreeArguments = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0435 \u0434\u0432\u0430 \u0438\u043b\u0438 \u0442\u0440\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430
#
# rv32im/RV32imEnvironmentCallAndBreakpoints.java
#
Rv32imECABNotImplmented = \u0412 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u0440\u043e\u0434\u043e\u043e\u0445\u0440\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u0432\u044b\u0437\u043e\u0432\u0430 \u0438 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0430 \u043d\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b
#
# rv32im/RV32imIntegerRegisterImmediateInstructions.java
#
RV32imAssemblerBUG = \u0411\u0423\u0413!
#
# rv32im/RV32imLoadAndStoreInstructions.java
#
AssemblerExpectedImmediateValue = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435
AssemblerExpectedTwoArguments = \u0414\u0432\u0430 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0445 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430
AssemblerImmediateOutOfRange = \u041d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430
LoadStoreErrorInReadTransaction = \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043f\u0430\u043c\u044f\u0442\u0438:
LoadStoreErrorInWriteTransaction = \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043f\u0430\u043c\u044f\u0442\u0438:
RV32imAssemblerExpectedBracketedRegister = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u043a\u043e\u0431\u043a\u0430\u0445, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 (x1)
RV32imAssemblerExpectedImmediateIndexedRegister = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 5(x1)
#
# rv32im/Rv32imMemoryOrderingInstructions.java
#
RV32imAssemblerNotSupportedYet = \u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u043e\u043f\u043a\u043e\u0434 asm
Rv32imMOINotImplmented = \u0412 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043f\u043e \u0437\u0430\u043a\u0430\u0437\u0443 \u043f\u0430\u043c\u044f\u0442\u0438 \u043d\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b.
#
# Soc.java
#
socLibrary = \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b System On Chip
SocMemoryComponent = \u0421\u0438\u043c\u0443\u043b\u044f\u0442\u043e\u0440 \u043f\u0430\u043c\u044f\u0442\u0438
#
# util/AbstractAssembler.java
#
AssemblerUnknownOpcode = \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u043e\u043f\u043a\u043e\u0434
UnknownInstruction = \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f
#
# util/Assembler.java
#
AssemblerAssumingEntryPoint = \u041f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u043c \u0441\u0430\u043c\u044b\u0439 \u043d\u0438\u0437\u043a\u0438\u0439 \u0430\u0434\u0440\u0435\u0441 \u0441 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u043e\u0447\u043a\u0438 \u0432\u0445\u043e\u0434\u0430.\n\u0427\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0432\u0430\u0448 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443.\n\u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044f\u0440\u043b\u044b\u043a \u043f\u043e\u0434 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c "_\u0441\u0442\u0430\u0440\u0442" \u0432 \u0430\u0434\u0440\u0435\u0441 \u0441\u0430\u0439\u0442\u0430.\n\u0433\u0434\u0435 \u0432\u0430\u0448 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u043d\u0430\u0447\u0430\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b.
AssemblerCannotUseInsideMacro = \u042d\u0442\u0430 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u043c\u0430\u043a\u0440\u043e\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f
AssemblerEndOfMacroNotFound = \u041d\u0435 \u0441\u043c\u043e\u0433 \u043d\u0430\u0439\u0442\u0438 \u043a\u043e\u043d\u0446\u0430 \u043c\u0430\u043a\u0440\u043e\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f.
AssemblerExpectedMacroName = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0430\u043a\u0440\u043e\u0441\u0430
AssemblerExpectedMacroNrOfParameters = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043a\u0440\u043e\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432
AssemblerExpectingLabelIdentifier = \u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u044f\u0440\u043b\u044b\u043a\u0430
AssemblerMissingLabelBefore = \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043c\u0435\u0442\u043a\u0430
AssemblerNoExecutableSection = \u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0433\u043b\u0430 \u0431\u044b \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430.
AssemblerReguiresNumberAfterMath = \u041f\u043e\u0441\u043b\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0443\u0436\u043d\u043e \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0437\u0430 \u0446\u0438\u0444\u0440\u043e\u0439.
AssemblerUnknowCharacter = \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436
AssemblerWrongClosingBracket = \u042d\u0442\u043e\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043a\u0440\u043e\u043d\u0448\u0442\u0435\u0439\u043d \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f
AssemblerWrongOpeningBracket = \u042d\u0442\u043e\u0442 \u043a\u0440\u043e\u043d\u0448\u0442\u0435\u0439\u043d \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f
#
# util/AssemblerAsmInstruction.java
#
AssemblerCouldNotFindAddressForLabel = \u041d\u0435 \u0441\u043c\u043e\u0433 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0430\u0434\u0440\u0435\u0441 \u0434\u043b\u044f \u044d\u0442\u043e\u0439 \u044d\u0442\u0438\u043a\u0435\u0442\u043a\u0438.
AssemblerCouldNotFindValueForDefine = \u041d\u0435 \u0441\u043c\u043e\u0433 \u043d\u0430\u0439\u0442\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430.
AssemblerDivZero = \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 \u043d\u043e\u043b\u044c \u043e\u0448\u0438\u0431\u043e\u043a
AssemblerExpectedImmediateValueAfterMath = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.
#
# util/AssemblerInfo.java
#
AssemblerDuplicatedLabelNotSupported = \u0418\u043c\u0435\u043d\u0430 \u044d\u0442\u0438\u043a\u0435\u0442\u043e\u043a \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c\u0438, \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0439 \u044d\u0442\u043e\u0439 \u044d\u0442\u0438\u043a\u0435\u0442\u043a\u0438.
AssemblerDuplicatedName = \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435 \u0438\u043c\u044f \u0434\u043b\u044f \u0434\u043e\u043c\u0435\u043d\u0430 .equ \u0438 \u043c\u0435\u0442\u043a\u0438.
AssemblerDuplicatedSectionError = \u0418\u043c\u0435\u043d\u0430 \u0441\u0435\u043a\u0446\u0438\u0439 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c\u0438, \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0446\u0438\u0439 \u0441 \u0442\u0430\u043a\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c.
AssemblerExpectedLabel = \u041e\u0436\u0438\u0434\u0430\u043b \u043b\u0435\u0439\u0431\u043b
AssemblerExpectedLabelAndNumber = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u0430\u044f \u043c\u0435\u0442\u043a\u0430 \u0441 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u043c \u0432\u0432\u0435\u0434\u0435\u043d\u0438\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f
AssemblerExpectedParameter = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0430 \u044d\u0442\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438
AssemblerExpectingNumber = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043d\u043e\u043c\u0435\u0440
AssemblerExpectingPositiveNumber = \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e
AssemblerExpectingSectionName = \u041e\u0436\u0438\u0434\u0430\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0430.
AssemblerExpectingString = \u041e\u0436\u0438\u0434\u0430\u043b \u0441\u0442\u0440\u043e\u043a\u0443
AssemblerMacroIncorrectNumberOfParameters = \u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u043a\u0440\u043e\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432
AssemblerOverlappingSections = \u042d\u0442\u043e\u0442 \u0440\u0430\u0437\u0434\u0435\u043b \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u0435\u0442\u0441\u044f \u0441 \u0434\u0440\u0443\u0433\u0438\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u043c
AssemblerUnknownIdentifier = \u042f \u043d\u0435 \u0437\u043d\u0430\u044e \u044d\u0442\u043e\u0433\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430.
AssemblerUnsupportedAssemblerInstruction = \u042d\u0442\u0430 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u0441\u0431\u043e\u0440\u043a\u0435 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430.
AssemblerValueOutOfRange = \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430
#
# util/AssemblerMacro.java
#
AssemblerMacroCallingEachotherDeadlock = \u041c\u0430\u043a\u0440\u043e\u0441\u044b \u0437\u0432\u043e\u043d\u044f\u0442 \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u0442\u0443\u043f\u0438\u043a\u043e\u0432\u0443\u044e \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e.
AssemblerMacroCannotUseRecurency = \u041c\u0430\u043a\u0440\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0435\u0431\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u043c \u0442\u0443\u043f\u0438\u043a\u043e\u0432\u0443\u044e \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e.
AssemblerMacroParameterNotDefined = \u042d\u0442\u043e\u0442 \u043c\u0430\u043a\u0440\u043e\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0432\u0430\u0448\u0435\u043c \u043c\u0430\u043a\u0440\u043e\u0441\u0435.
AssemblerUnknownLabel = \u042d\u0442\u043e\u0442 \u044f\u0440\u043b\u044b\u043a \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u043d\u0435 \u043c\u043e\u0433\u0443 \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c.
#
# vga/SocVga.java
#
SocVgaComponent = \u044d\u043a\u0440\u0430\u043d VGA
#
# vga/VgaAttributes.java
#
VgaBufferAddress = \u0410\u0434\u0440\u0435\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u043f\u0438\u043a\u0441\u0435\u043b\u0435\u0439 \u0410\u0434\u0440\u0435\u0441:
VgaInitialDisplayMode = \u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c:
VgaMode1024x768 = 1024x768
VgaMode160x120 = 160x120
VgaMode320x240 = 320x240
VgaMode640x480 = 640x480
VgaMode800x600 = 800x600
VgaSoft1024x768 = \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 1024x768:
VgaSoft160x120 = \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 160x120:
VgaSoft320x240 = \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 320x240:
VgaSoft640x480 = \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 640x480:
VgaSoft800x600 = \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 800x600:
#
# vga/VgaMenu.java
#
ErrorCreatingHeaderAndOrCFile = \u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438/\u0438\u043b\u0438 c-\u0444\u0430\u0439\u043b!
ExportC = \u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0421-\u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432
SelectDirectoryToStoreC = \u0417\u0430\u0434\u0430\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0421-\u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432
SuccesCreatingHeaderAndCFile = \u0424\u0430\u0439\u043b\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u044b:\n%s\n\u0438\n%s
VgaMenuModeSelectFunctions = /* \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043c\u043e\u0436\u043d\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0440\u0435\u0436\u0438\u043c\u043e\u043c vga.\n * \u041f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 vga-\u0440\u0435\u0436\u0438\u043c\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u0440\u0435\u0436\u0438\u043c\u044b (\u0441\u043c. \u0432\u044b\u0448\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0440\u0435\u0436\u0438\u043c\u043e\u0432).\n * \u0417\u0430\u043f\u0438\u0441\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0440\u0435\u0436\u0438\u043c\u0430 \u0438\u0437\u043c\u0435\u043d\u0438\u0442 \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430 VGA-\u0434\u0438\u0441\u043f\u043b\u0435\u0435.\n */


