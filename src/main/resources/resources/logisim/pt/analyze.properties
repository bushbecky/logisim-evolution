#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = A linha %d do ficheiro csv '%s' n\u00e3o cont\u00e9m bit %d da vari\u00e1vel '%s', abortando.
CsvDuplicatedBit = A linha %d do ficheiro csv "%s" cont\u00e9m o dobro do bit %d da vari\u00e1vel "%s", abortando.
CsvDuplicatedVar = A linha %d do arquivo csv '%s' cont\u00e9m m\u00faltiplas vezes a vari\u00e1vel '%s', abortando.
CsvIncorrectBitOrder = A linha %d do arquivo csv '%s' cont\u00e9m uma seq\u00fc\u00eancia de bits incorreta para a vari\u00e1vel '%s', abortando.
CsvIncorrectEmpty = A linha %d do ficheiro csv '%s' cont\u00e9m um campo vazio incorrecto na posi\u00e7\u00e3o %d, abortando.
CsvIncorrectLine = A linha %d do ficheiro csv "%s" tem entradas %d em vez da %d requerida, abortando.
CsvIncorrectVarName = A linha %d do ficheiro csv "%s" cont\u00e9m a etiqueta incorrectamente formatada "%s", abortando.
CsvInvalidEntry = A linha %d do arquivo csv '%s' cont\u00e9m uma entrada inv\u00e1lida '%s' no campo %d, abortando.
CsvNoInputsFound = Line %d do ficheiro csv '%s' n\u00e3o cont\u00e9m quaisquer entradas, abortando.
CsvNoSepFound = A linha %d do ficheiro csv "%s" n\u00e3o cont\u00e9m nenhum campo separador, abortando.
CsvNotEnoughEmpty = A linha %d do arquivo csv '%s' n\u00e3o cont\u00e9m campos vazios suficientes depois da vari\u00e1vel '%s', abortando.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (vazio)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = portuges
latexEmpty = Analisador vazio
latexEmptyText = Como o analisador n\u00e3o tinha vari\u00e1veis de entrada e/ou sa\u00edda no momento em que este documento foi gerado, n\u00e3o h\u00e1 nada para mostrar.
latexHeader = Logisim-evolu\u00e7\u00e3o gerada pelo documento em %s
latexIntroduction = Introdu\u00e7\u00e3o
latexIntroductionText = Este documento foi gerado por logisim-evolution. Qualquer parte das fontes do TeX pode ser usada em seus pr\u00f3prios documentos sem nenhum problema. Caso voc\u00ea queira usar todas/partes das fontes TeX geradas, por favor (1) n\u00e3o se esque\u00e7a de incluir os pacotes necess\u00e1rios, e (2) inclua uma observa\u00e7\u00e3o de que esta fonte foi gerada pela logisim-evolu\u00e7\u00e3o.
latexKarnaugh = Diagramas de Karnaugh
latexKarnaughEmpty = Diagramas de Karnaugh vazios
latexKarnaughFilledIn = Preenchido com diagramas de Karnaugh
latexKarnaughFilledInGroups = Preenchido com diagramas de Karnaugh com tampas
latexKarnaughText = Esta sec\u00e7\u00e3o mostra v\u00e1rias vers\u00f5es dos diagramas de Karnaugh das fun\u00e7\u00f5es dadas.
latexKarnaughToBig = N\u00e3o \u00e9 poss\u00edvel apresentar diagramas de Karnaugh com mais de %d vars de entrada.
latexMinimal = Express\u00f5es m\u00ednimas
latexTruthTable = Tabela da verdade
latexTruthTableComlete = Tabela da verdade completa
latexTruthTableCompact = Tabela da verdade compactada
latexTruthTableText = A tabela pode ser muito grande para ser exibida na p\u00e1gina. No tempo de gera\u00e7\u00e3o n\u00e3o foi feito nenhum c\u00e1lculo sobre o tamanho da tabela em rela\u00e7\u00e3o \u00e0 largura/altura da p\u00e1gina.
latexTruthTableToBig = \\\\~\\\\A mesa da verdade tem mais do que entradas, n\u00e3o faz sentido mostr\u00e1-la aqui.
tableLatexFilter = Documento Logisim-evolution TeX (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Tabela da Verdade da Evolu\u00e7\u00e3o da Logisim (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Ignorar erros e tentar novamente?
tableParseErrorTitle = Tabela de verdade de an\u00e1lise de erros
tableRemark1 = # Tabela da verdade
tableRemark2 = # Gerado a partir do circuito %s
tableRemark3 = # Exportado em %s
tableRemark4 = # Dicas e Notas sobre Formata\u00e7\u00e3o:\nVoc\u00ea pode editar este arquivo e depois import\u00e1-lo de volta para o Logisim!\nQualquer coisa depois de um "#" \u00e9 um coment\u00e1rio e ser\u00e1 ignorado.\n*y * Linhas em branco e linhas separadoras (por exemplo, ~~~~~~~~~~) s\u00e3o ignoradas.\n# * Manter nomes de colunas simples (sem espa\u00e7os, pontua\u00e7\u00e3o, etc.)\n# * 'Name[N..0]' indica uma vari\u00e1vel N 1 bit, enquanto que\n# 'Nome' por si s\u00f3 indica uma vari\u00e1vel de 1 bit.\nVoc\u00ea pode usar "x" ou "-" para indicar "n\u00e3o se importa" para ambos\nbits de entrada e sa\u00edda #.\nVoc\u00ea pode usar nota\u00e7\u00e3o bin\u00e1ria (por exemplo, '10100011xxxxxx') ou\n# ou hexadecimal (por exemplo, "C3x"). Logisim vai descobrir qual \u00e9 qual.
tableTxtFileFilter = Tabela da Verdade da Evolu\u00e7\u00e3o da Logisim (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = Por favor, espere...
analyzerWindowTitle = An\u00e1lise Combinacional
exportLatexButton = Exportar TeX
exportTableButton = Tabela de exporta\u00e7\u00e3o
expressionTab = Express\u00e3o
expressionTabTip = Ver e manipular as express\u00f5es de sa\u00edda.
importTableButton = Importar tabela
inputsOutputsTab = Entradas
inputsOutputsTabTip = Visualizar e editar o conjunto de vari\u00e1veis de entrada e sa\u00edda.
minimizedTab = Minimizada
minimizedTabTip = Ver express\u00f5es minimizadas correspondentes \u00e0 tabela-verdade.
tableTab = Tabela
tableTabTip = Ver e manipular a tabela-verdade.
#
# gui/BuildCircuitButton.java
#
buildCircuitButton = Construir circuito
buildConfirmReplaceMessage = Tem certeza que quer substituir o circuito %s?
buildConfirmReplaceTitle = Confirmar a substitui\u00e7\u00e3o
buildDialogErrorTitle = Imposs\u00edvel construir circuito
buildDialogTitle = Construir circuito
buildNameLabel = Nome do circuito:
buildNandsLabel = Usar apenas portas NAND
buildNeedCircuitError = Um nome para o circuito deve ser especificado.
buildNeedProjectError = Selecionar o projeto alvo.
buildProjectLabel = Projeto alvo:
buildTwoInputsLabel = Usar apenas portas com duas entradas
replaceCircuitAction = Substituir circuito
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Continuar
cvsFilePreview = Pr\u00e9-visualiza\u00e7\u00e3o das primeiras quatro linhas do ficheiro de leitura:
seperatorSpace = "Espa\u00e7o"...
SeperatorTab = O que se passa?
UsedQuotesInFile = Seleccione o car\u00e1cter "quote" que \u00e9 utilizado no ficheiro csv:
UsedSeperatorInFile = Seleccione o car\u00e1cter "separador" que \u00e9 utilizado no ficheiro csv:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = N\u00e3o consigo escrever ficheiros: %s
confirmOverwriteMessage = Tens a certeza que queres substituir o ficheiro %s?
confirmOverwriteTitle = Confirmar Sobregrava\u00e7\u00e3o
saveButton = Tabela da verdade de exporta\u00e7\u00e3o
saveErrorTitle = Erro ao salvar o arquivo
#
# gui/ExpressionTab.java
#
cantImportFormatError = N\u00e3o \u00e9 poss\u00edvel importar este tipo de dados
outputExpressionEdit = Express\u00f5es de sa\u00edda (clicar duas vezes para editar):
#
# gui/ImportTableButton.java
#
cantReadMessage = N\u00e3o consigo ler o ficheiro: %s
DoNotKnowHowto = N\u00e3o sabe ler ou escrever arquivos '%s' (a extens\u00e3o deve ser .txt ou .csv).
notFileMessage = N\u00e3o \u00e9 um ficheiro: %s
openButton = Tabela Verdade de importa\u00e7\u00e3o
openErrorTitle = Arquivo de leitura de erros
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = N\u00e3o h\u00e1 entradas dispon\u00edveis.
karnaughNoOutputError = Nenhuma sa\u00edda selecionada.
karnaughTooManyInputsError = Entradas demais para a tabela.
NoSelectedKmapGroup = Nenhum grupo selecionado.
SelectedKmapGroup = Grupo selecionado:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = L\u00f3gica Alternativa
expressionCalc = Calculando a express\u00e3o
expressionLogicrepresentation = L\u00f3gico
expressionMathrepresentation = Matem\u00e1tica
ExpressionNotation = Nota\u00e7\u00e3o:
expressionProgbitsrepresentation = Programa\u00e7\u00e3o com bits
expressionProgboolsrepresentation = Programa\u00e7\u00e3o com Boolean's
KMapLinedStyle = Forradas
KmapNumberedStyle = Numerado
KmapStyle = Estilo:
minimizedFormat = Formato:
minimizedProductOfSums = Produto das somas
minimizedSetButton = Tomar como express\u00e3o
minimizedSumOfProducts = Soma de produtos
#
# gui/OutputSelector.java
#
outputSelectLabel = Sa\u00edda:
#
# gui/TableTab.java
#
tableCompact = Recolher linhas duplicadas
tableExpand = Mostrar todas as linhas
tableNoInputs = (sem entradas)
tableNoOutputs = (sem sa\u00eddas)
tableRowsShown = %d das linhas de %d mostradas
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Linhas de compacta\u00e7\u00e3o
#
# gui/TableTabClip.java
#
clipPasteEndError = A \u00e1rea de transfer\u00eancia ultrapassa o limite da tabela.
clipPasteErrorTitle = Erro ao colar
clipPasteSizeError = A \u00e1rea onde colar dever\u00e1 ser do mesmo tamanho que a \u00e1rea de transfer\u00eancia.
clipPasteSupportedError = O conte\u00fado da \u00e1rea de transfer\u00eancia n\u00e3o pode ser colado no editor.
#
# gui/VariableTab.java
#
inputVariables = Vari\u00e1veis de entrada
outputVariables = Vari\u00e1veis de sa\u00edda
variableClickToAdd = Clique para adicionar uma nova vari\u00e1vel
variableDuplicateError = Nome de vari\u00e1vel j\u00e1 existente.
variableMaximumError = (Alcan\u00e7ado o tamanho m\u00e1ximo %s.)
variablePartError = Nome n\u00e3o pode conter '%s'.
variableRangeFinalPar = Intervalo: em falta ] directamente ap\u00f3s o \u00edndice LSB
variableRangeInvalChar = Intervalo: caracteres inv\u00e1lidos ap\u00f3s o fechamento ]
variableRangeMSBWrong = Intervalo: in\u00edcio [ deve ser seguido de um n\u00famero
variableRangeStartPar = Alcance: Faltando olhar [
variableRangeWrongLB = Alcance: O \u00edndice MSB deve ser maior/igual ao \u00edndice LSB
variableRangeWrongSep = Alcance: O \u00edndice MSB e o \u00edndice LSB devem ser separados por ...
variableStartError = Nome deve come\u00e7ar com uma letra.
#
# model/Entry.java
#
busError = Valores de sa\u00eddas conflitantes no circuito.
oscillateError = Oscila\u00e7\u00e3o no circuito.
#
# model/Parser.java
#
badVariableName = %s n\u00e3o \u00e9 uma vari\u00e1vel de entrada.
implicitAndOperator = (AND impl\u00edcita)
invalidCharacterError = Caracteres desconhecidos: %s
lparenMissingError = Falta abrir par\u00eanteses.
missingBraceError = Nada de cinta a condizer: "%s"
missingIdentifierError = Identificador ausente antes do subscrito: "%s"
missingLeftOperandError = Falta o operado esquerdo ao operador %s.
missingRightOperandError = Falta o operando direito ao operador %s.
missingSubscriptError = Subscrito em falta: "%s"
rparenMissingError = Falta fechar par\u00eanteses.
unexpectedApostrophe = Ap\u00f3strofo ("'") inesperado
unexpectedAssignmentError = Operador de atribui\u00e7\u00e3o inesperada: "%s"
#
# model/Var.java
#
badVariableBitFormError = O nome da vari\u00e1vel deve ser do formul\u00e1rio "name[i]".
badVariableColonError = A designa\u00e7\u00e3o da vari\u00e1vel deve figurar antes de ":".
badVariableIndexError = O \u00edndice de bits vari\u00e1veis deve ser um n\u00famero inteiro
variableFormat = As vari\u00e1veis devem ter a forma 'name[N..0]'.
variableTooMuchBits = As vari\u00e1veis n\u00e3o podem ter mais de 32 bits de largura


