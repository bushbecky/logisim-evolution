#
# base/VhdlContent.java
#
vhdlDuplicateNameError = VHDL inv\u00e1lido Nome da entidade. Os nomes devem ser \u00fanicos.
vhdlInvalidNameError = VHDL inv\u00e1lido Nome da entidade. Os nomes devem:\n * Come\u00e7a com uma carta,\n * cont\u00eam apenas letras, n\u00fameros e sublinhados,\n * n\u00e3o acabar com um sublinhado,\n * n\u00e3o cont\u00e9m dois sublinhados consecutivos.
vhdlKeywordNameError = VHDL inv\u00e1lido Nome da entidade. Essa \u00e9 uma palavra-chave reservada.
#
# base/VhdlEntity.java
#
vhdlEntityName = Nome da entidade VHDL
#
# base/VhdlSimConstants.java
#
vhdlSimName = Nome da simula\u00e7\u00e3o VHDL
#
# file/HdlFile.java
#
hdlFileReaderError = Erro ao ler arquivo.
hdlFileWriterError = Erro ao gravar arquivo.
#
# gui/HdlContentEditor.java
#
hdlOpenButton = Importar VHDL...
hdlSaveButton = Exportar VHDL...
validateAndSaveButton = Validar
#
# gui/HdlContentView.java
#
hdlSaveDialog = Exportar arquivo VHDL
#
# hdl/Hdl.java
#
hdlLibrary = HDL-IP
#
# hdl/HdlContentEditor.java
#
cancelOption = Cancelar
closeButton = Fechar janela
confirmCloseBackup = Criar backup
confirmCloseMessage = Qualquer altera\u00e7\u00e3o feita a este componente ser\u00e1 perdida. Fechar de qualquer maneira?
confirmCloseNo = N\u00e3o
confirmCloseTitle = Confirmar fechar
confirmCloseYes = Sim
hdlFrameTitle = Logisim-evolu\u00e7\u00e3o: Editor HDL
hexOpenErrorTitle = Erro aberto
hexSaveErrorTitle = Salvar erro
importMessage = Qualquer altera\u00e7\u00e3o feita a este componente ser\u00e1 perdida. Importar na mesma ?
importOption = Importa\u00e7\u00e3o
importTitle = Confirmar importa\u00e7\u00e3o
openButton = Importa\u00e7\u00e3o...
saveButton = Exporta\u00e7\u00e3o...
validateButton = Validar VHDL
#
# hdl/VhdlContentComponent.java
#
validationErrorButton = Continuar
validationParseError = Erro de an\u00e1lise VHDL
#
# hdl/VhdlEntityComponent.java
#
vhdlComponent = Entidade VHDL
vhdlContentAttr = Conte\u00fado
vhdlContentValue = (clique para editar)
#
# hdl/VhdlParser.java
#
CannotFindEntityException = A declara\u00e7\u00e3o de entidade n\u00e3o pode ser encontrada
duplicatedEntityException = Declara\u00e7\u00e3o de entidade duplicada detectada
emptySourceException = N\u00e3o \u00e9 poss\u00edvel analisar conte\u00fado vazio
invalidTypeException = Tipo de porta inv\u00e1lido
lineDeclarationException = Sintaxe de linha ilegal
multiplePortsDeclarationException = Sintaxe de m\u00faltiplas portas ilegais
portDeclarationException = Sintaxe da porta ilegal
vectorDeclarationException = Sintaxe vetorial ilegal


