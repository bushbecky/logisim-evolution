#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Computa\u00e7\u00e3o da tabela-verdade em lugar da express\u00e3o devido a %s.
analyzeCircularError = Refer\u00eancia circular detectada; tabela-verdade ser\u00e1 calculada no lugar.
analyzeConflictError = Sa\u00eddas conflitantes detectada; tabela-verdade ser\u00e1 computada em seu lugar.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = Dire\u00e7\u00e3o da forma
circuitAnchor = \u00c2ncora
#
# appear/AppearancePort.java
#
circuitPort = Porta
#
# appear/DynamicElement.java
#
# ==> circuitLabelBottom = 
# ==> circuitLabelCenter = 
# ==> circuitLabelLeft = 
# ==> circuitLabelNone = 
# ==> circuitLabelRight = 
# ==> circuitLabelTop = 
# ==> circuitShowLabelAttr = 
#
# Circuit.java
#
# ==> changeComponentAttributesAction = 
# ==> ComponentLabelCollisionError = 
# ==> ComponentLabelNameError = 
# ==> UsedLabelNameError = 
#
# CircuitAttributes.java
#
# ==> circuitAppearanceAttr = 
# ==> circuitCustomAppearance = 
circuitIsVhdl = Refer\u00eancia para arquitetura VHDL?
circuitLabelAttr = R\u00f3tulo compartilhado
circuitLabelDirAttr = Dire\u00e7\u00e3o do r\u00f3tulo compartilhado
circuitLabelFontAttr = Fonte do r\u00f3tulo compartilhado
circuitLabelLocAttr = Posi\u00e7\u00e3o do r\u00f3tulo
circuitName = Nome do circuito
# ==> circuitNamedBoxFixedSize = 
circuitVhdlPath = Caminho para arquivo com arquitetura VHDL
# ==> EmptyNameError = 
#
# CircuitMutation.java
#
unknownChangeAction = Alterar circuito
#
# RadixOption.java
#
radix10Signed = Decimal com sinal
radix10Unsigned = Decimal sem sinal
radix16 = Hexadecimal
radix2 = Bin\u00e1rio
radix8 = Octal
radixAttr = Base
#
# Splitter.java
#
splitterCombinedTip = Extremidade combinada do distribuidor
splitterSplit0Tip = Nenhum bit oriundo da extremidade combinada
splitterSplit1Tip = Bit %s oriundo da extremidade combinada
splitterSplitManyTip = Bits %s oriundos da extremidade combinada
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Forma
splitterAppearanceCenter = Central
splitterAppearanceLeft = \u00c0 esquerda
splitterAppearanceLegacy = Legacy
splitterAppearanceRight = \u00c0 direita
splitterBitAttr = Bit %s
splitterBitNone = Nenhum
splitterBitWidthAttr = Largura em bits \u00e0 entrada
splitterFanOutAttr = Largura em bits \u00e0 sa\u00edda
# ==> splitterSpacing = 
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Distribuir em ordem crescente
splitterDistributeDescending = Distribuir em ordem decrescente
#
# SplitterFactory.java
#
splitterComponent = Distribuidor
#
# SubcircuitFactory.java
#
subcircuitViewItem = Ver %s
#
# Wire.java
#
wireDirectionAttr = Dire\u00e7\u00e3o
wireDirectionHorzOption = Horizontal
wireDirectionVertOption = Vertical
wireLengthAttr = Comprimento
#
# WireFactory.java
#
wireComponent = Conex\u00e3o


