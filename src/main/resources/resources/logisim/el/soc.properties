#
# bus/SocBus.java
#
# ==> SocBusComponent = 
#
# bus/SocBusAttributes.java
#
# ==> SocBusTraceSize = 
# ==> SocBusTraceVisable = 
#
# bus/SocBusMenuProvider.java
#
# ==> insertTrans = 
# ==> SocBusMemMap = 
# ==> SocBusTraceWindow = 
# ==> SocInsertTransWindowTitle = 
# ==> TraceWindowTitleDoubleClickOnTraceToRemoveTrace = 
#
# data/SocBusInfo.java
#
# ==> SocBusNotConnected = 
#
# data/SocBusStateInfo.java
#
# ==> SocBusNoTrace = 
# ==> SocMemMapWindowTitle = 
# ==> SocMemoryMapOk = 
# ==> SocMemoryMapTitle = 
#
# data/SocBusTransaction.java
#
# ==> SocBusStateMaster = 
# ==> SocBusStateNoDataMax10chars = 
# ==> SocBusStateSlave = 
# ==> SocBusStateTraceIndex = 
# ==> SocTransactionByteAccesNoSupport = 
# ==> SocTransactionByteAccesNoSupportShort = 
# ==> SocTransactionHalfWordAccesNoSupport = 
# ==> SocTransactionHalfWordAccesNoSupportShort = 
# ==> SocTransactionMisallignedAddress = 
# ==> SocTransactionMisallignedAddressShort = 
# ==> SocTransactionMultipleSlaveAnswers = 
# ==> SocTransactionMultipleSlaveAnswersShort = 
# ==> SocTransactionNoBusConnected = 
# ==> SocTransactionNoBusConnectedShort = 
# ==> SocTransactionNoneAtomicRW = 
# ==> SocTransactionNoneAtomicRWShort = 
# ==> SocTransactionNoRespons = 
# ==> SocTransactionNoResponsShort = 
# ==> SocTransactionNoSlavesAttached = 
# ==> SocTransactionNoSlavesAttachedShort = 
# ==> SocTransactionReadOnlyAccessError = 
# ==> SocTransactionReadOnlyAccessErrorShort = 
# ==> SocTransactionRegisterDoesNotExist = 
# ==> SocTransactionRegisterDoesNotExistShort = 
# ==> SocTransactionSuccessfull = 
# ==> SocTransactionSuccessfullShort = 
# ==> SocTransactionUnknownError = 
# ==> SocTransactionUnknownErrorShort = 
# ==> SocTransactionWordAccesNoSupport = 
# ==> SocTransactionWordAccesNoSupportShort = 
# ==> SocTransactionWriteOnlyAccessError = 
# ==> SocTransactionWriteOnlyAccessErrorShort = 
#
# data/SocMemMapModel.java
#
# ==> SocMemMapEmpty = 
# ==> SocMemMapEndAddress = 
# ==> SocMemMapSlaveName = 
# ==> SocMemMapStartAddress = 
#
# data/SocSimulationManager.java
#
# ==> SocBusManagerSelectBus = 
# ==> SocBusSelectAttr = 
# ==> SocBusSelectAttrClick = 
# ==> SocManagerNoBusses = 
#
# data/SocUpMenuProvider.java
#
# ==> ProcReadElfLoadedAndEntrySet = 
# ==> SocUpMenuAsmWindow = 
# ==> SocUpMenuCpuAsmWindowTitle = 
# ==> SocUpMenuCpuProgramWindowTitle = 
# ==> SocUpMenuCpuStateWindowTitle = 
# ==> SocUpMenuErrorReadingElfTitle = 
# ==> SocUpMenuReadElf = 
# ==> SocUpMenuSelectElfFile = 
# ==> SocUpMenuShowProgram = 
# ==> SocUpMenuShowState = 
#
# data/SocUpSimulationState.java
#
# ==> SocUpSimHalt = 
# ==> SocUpSimHaltBreak = 
# ==> SocUpSimHaltError = 
# ==> SocUpSimRunning = 
# ==> SocUpSimStateLabel = 
# ==> SocUpSimstateStart = 
# ==> SocUpSimstateStop = 
# ==> SocUpUnknown = 
#
# file/ElfHeader.java
#
# ==> ElfHeaderEIClassError = 
# ==> ElfHeaderEIDataError = 
# ==> ElfHeaderIncorrectEISize = 
# ==> ElfHeaderIncorrectESize = 
# ==> ElfHeaderIncorrectMagic = 
# ==> ElfHeaderNoErrors = 
# ==> ElfHeaderReadingFileError = 
# ==> ElfHeaderUnknownArchitecture = 
#
# file/ElfProgramHeader.java
#
# ==> ProgHeaderNotFound = 
# ==> ProgHeaderReadError = 
# ==> ProgHeaderSizeError = 
# ==> ProgHeaderSuccess = 
#
# file/ElfSectionHeader.java
#
# ==> ElfSectHeadMultiStringtabError = 
# ==> ElfSectHeadMultiSymtabError = 
# ==> ElfSectHeadNotFound = 
# ==> ElfSectHeadReadError = 
# ==> ElfSectHeadSizeError = 
# ==> ElfSectHeadStingIdxError = 
# ==> ElfSectHeadStingNotFound = 
# ==> ElfSectHeadStingReadError = 
# ==> ElfSectHeadStingTypeError = 
# ==> ElfSectHeadSuccess = 
# ==> ElfSymTableNotFound = 
# ==> ElfSymTableReadError = 
#
# file/ProcessorReadElf.java
#
# ==> ProcReadElf64BitNotSupportedYet = 
# ==> ProcReadElfArchError = 
# ==> ProcReadElfEndianMismatch = 
# ==> ProcReadElfErrorOpeningFile = 
# ==> ProcReadElfLoadableSectionNotFound = 
# ==> ProcReadElfLoadableSectionReadError = 
# ==> ProcReadElfLoadableSectionSizeError = 
# ==> ProcReadElfLoadableSectionTooBig = 
# ==> ProcReadElfMemoryError = 
# ==> ProcReadElfNotExecutable = 
# ==> ProcReadElfSuccess = 
#
# gui/AssemblerPanel.java
#
# ==> AsmPanAmsFileExtention = 
# ==> AsmPanAssemble = 
# ==> AsmPanDocumentChangedSave = 
# ==> AsmPanErrorCreateFile = 
# ==> AsmPanErrorReadingFile = 
# ==> AsmPanNextError = 
# ==> AsmPanOpenFile = 
# ==> AsmPanPreviousError = 
# ==> AsmPanReadAsmFile = 
# ==> AsmPanRun = 
# ==> AsmPanSaveAsmFile = 
# ==> AsmPanSaveFile = 
# ==> AsmPanSaveFileAs = 
# ==> AsmPanSaveFirstBeforeOpen = 
# ==> AssemblerAssembleSuccess = 
# ==> AssemblerRunSuccess = 
# ==> AssemblerUnableToDownload = 
#
# gui/BreakpointPanel.java
#
# ==> RV32imAsmLineIndicator = 
# ==> RV32imRemoveBreakPoint = 
# ==> RV32imSetBreakpoint = 
#
# gui/BusTransactionInsertionGui.java
#
# ==> SocTransInsAddress = 
# ==> SocTransInsAtomicRequest = 
# ==> SocTransInsByteAccess = 
# ==> SocTransInsHalfWordAccess = 
# ==> SocTransInsInputData = 
# ==> SocTransInsInsertTransaction = 
# ==> SocTransInsManual = 
# ==> SocTransInsReadData = 
# ==> SocTransInsReadRequest = 
# ==> SocTransInsTransResultTitle = 
# ==> SocTransInsWordAccess = 
# ==> SocTransInsWriteRequest = 
#
# gui/CpuDrawSupport.java
#
# ==> Rv32imAsmInstruction = 
# ==> Rv32imBinInstruction = 
# ==> Rv32imEmptyTrace = 
# ==> Rv32imExecutionTrace = 
# ==> Rv32imProgramCounter = 
# ==> Rv32imRegisterFile = 
#
# gui/SocCPUShape.java
#
# ==> RV32ShapeSimControl = 
#
# memory/SocMemory.java
#
# ==> SocMemBase = 
# ==> SocMemSizeStr = 
#
# memory/SocMemoryAttributes.java
#
# ==> SocMemSize = 
# ==> SocMemStartAddress = 
#
# nios2/Nios2.java
#
# ==> Nios2A = 
# ==> Nios2B = 
# ==> Nios2C = 
# ==> Nios2Component = 
# ==> Nios2Dataa = 
# ==> Nios2Datab = 
# ==> Nios2Done = 
# ==> Nios2N = 
# ==> Nios2ReadRa = 
# ==> Nios2ReadRb = 
# ==> Nios2Result = 
# ==> Nios2Start = 
# ==> Nios2WriteRc = 
#
# nios2/Nios2Attributes.java
#
# ==> nios2BreakVector = 
#
# nios2/Nios2CustomInstructions.java
#
# ==> AssemblerExpectedFourArguments = 
# ==> Nios2DonePinError = 
#
# nios2/Nios2OtherControlInstructions.java
#
# ==> AssemblerExpectedZeroOrOneArgument = 
# ==> Nios2AssemblerExpectedBracketedRegister = 
# ==> Nios2AssemblerExpectedImmediateIndexedRegister = 
# ==> Nios2CannotUseControlRegister = 
# ==> Nios2CannotUseCustomRegister = 
# ==> Nios2ExpectedControlRegister = 
#
# nios2/Nios2ProgramControlInstructions.java
#
# ==> AssemblerExpextedImmediateOrLabel = 
#
# nios2/Nios2State.java
#
# ==> Nios2Bstatus = 
# ==> Nios2Estatus = 
# ==> Nios2Status = 
#
# pio/PioAttributes.java
#
# ==> SicPioIrqType = 
# ==> SocPioAnyEdge = 
# ==> SocPioBidir = 
# ==> SocPioCaptureEdge = 
# ==> SocPioDirection = 
# ==> SocPioFallingEdge = 
# ==> SocPioGenIRQ = 
# ==> SocPioInout = 
# ==> SocPioInputCaptureBit = 
# ==> SocPioInputOnly = 
# ==> SocPioInputsSyncCapture = 
# ==> SocPioIrQEdge = 
# ==> SocPioIrqLevel = 
# ==> SocPioOutputIndividualBits = 
# ==> SocPioOutputOnly = 
# ==> SocPioOutputResetValue = 
# ==> SocPioRisingEdge = 
#
# pio/PioMenu.java
#
# ==> PioMenuBidirFunctionsRemark = 
# ==> PioMenuCaptureAll = 
# ==> PioMenuCaptureAny = 
# ==> PioMenuCaptureBit = 
# ==> PioMenuCaptureFalling = 
# ==> PioMenuCaptureRising = 
# ==> PioMenuEdgeCaptureRemark = 
# ==> PioMenuInputDataFunctionRemark = 
# ==> PioMenuIrqEdge = 
# ==> PioMenuIrqLevel = 
# ==> PioMenuMaskFunctionsRemark = 
# ==> PioMenuOutClearRemark = 
# ==> PioMenuOutputDataFunctionRemark = 
# ==> PioMenuOutSetRemark = 
#
# pio/SocPio.java
#
# ==> SocPioBidirPinx = 
# ==> SocPioBidirs = 
# ==> SocPioComponent = 
# ==> SocPioInputPinx = 
# ==> SocPioInputs = 
# ==> SocPioIrqOutput = 
# ==> SocPioOutputPinx = 
# ==> SocPioOutputs = 
# ==> SocPioResetInput = 
#
# rv32im/RV32im_M_ExtensionInstructions.java
#
# ==> AssemblerExpectedRegister = 
# ==> AssemblerExpectedThreeArguments = 
# ==> AssemblerUnknownRegister = 
#
# rv32im/Rv32im_riscv.java
#
# ==> Rv32imClockInput = 
# ==> Rv32imComponent = 
# ==> Rv32imIrqInput = 
# ==> Rv32imResetInput = 
#
# rv32im/RV32im_state.java
#
# ==> RV32imBreakPointReached = 
# ==> RV32imFetchExecutionError = 
# ==> RV32imFetchInvalidInstruction = 
# ==> RV32imFetchInvInstrAsm = 
# ==> RV32imFetchTransaction = 
# ==> SocHiddenForFasterSimulation = 
#
# rv32im/RV32imAttributes.java
#
# ==> rv32ExceptionVector = 
# ==> rv32imIrqWidth = 
# ==> rv32ResetVector = 
# ==> rv32StateVisable = 
#
# rv32im/RV32imControlTransferInstructions.java
#
# ==> AssemblerExpectedNoArguments = 
# ==> AssemblerExpectedOneArgument = 
# ==> Rv32imAssemblerExpectedOneOrTwoArguments = 
# ==> Rv32imAssemblerExpectedTwoOrThreeArguments = 
#
# rv32im/RV32imEnvironmentCallAndBreakpoints.java
#
# ==> Rv32imECABNotImplmented = 
#
# rv32im/RV32imIntegerRegisterImmediateInstructions.java
#
# ==> RV32imAssemblerBUG = 
#
# rv32im/RV32imLoadAndStoreInstructions.java
#
# ==> AssemblerExpectedImmediateValue = 
# ==> AssemblerExpectedTwoArguments = 
# ==> AssemblerImmediateOutOfRange = 
# ==> LoadStoreErrorInReadTransaction = 
# ==> LoadStoreErrorInWriteTransaction = 
# ==> RV32imAssemblerExpectedBracketedRegister = 
# ==> RV32imAssemblerExpectedImmediateIndexedRegister = 
#
# rv32im/Rv32imMemoryOrderingInstructions.java
#
# ==> RV32imAssemblerNotSupportedYet = 
# ==> Rv32imMOINotImplmented = 
#
# Soc.java
#
# ==> socLibrary = 
# ==> SocMemoryComponent = 
#
# util/AbstractAssembler.java
#
# ==> AssemblerUnknownOpcode = 
# ==> UnknownInstruction = 
#
# util/Assembler.java
#
# ==> AssemblerAssumingEntryPoint = 
# ==> AssemblerCannotUseInsideMacro = 
# ==> AssemblerEndOfMacroNotFound = 
# ==> AssemblerExpectedMacroName = 
# ==> AssemblerExpectedMacroNrOfParameters = 
# ==> AssemblerExpectingLabelIdentifier = 
# ==> AssemblerMissingLabelBefore = 
# ==> AssemblerNoExecutableSection = 
# ==> AssemblerReguiresNumberAfterMath = 
# ==> AssemblerUnknowCharacter = 
# ==> AssemblerWrongClosingBracket = 
# ==> AssemblerWrongOpeningBracket = 
#
# util/AssemblerAsmInstruction.java
#
# ==> AssemblerCouldNotFindAddressForLabel = 
# ==> AssemblerCouldNotFindValueForDefine = 
# ==> AssemblerDivZero = 
# ==> AssemblerExpectedImmediateValueAfterMath = 
#
# util/AssemblerInfo.java
#
# ==> AssemblerDuplicatedLabelNotSupported = 
# ==> AssemblerDuplicatedName = 
# ==> AssemblerDuplicatedSectionError = 
# ==> AssemblerExpectedLabel = 
# ==> AssemblerExpectedLabelAndNumber = 
# ==> AssemblerExpectedParameter = 
# ==> AssemblerExpectingNumber = 
# ==> AssemblerExpectingPositiveNumber = 
# ==> AssemblerExpectingSectionName = 
# ==> AssemblerExpectingString = 
# ==> AssemblerMacroIncorrectNumberOfParameters = 
# ==> AssemblerOverlappingSections = 
# ==> AssemblerUnknownIdentifier = 
# ==> AssemblerUnsupportedAssemblerInstruction = 
# ==> AssemblerValueOutOfRange = 
#
# util/AssemblerMacro.java
#
# ==> AssemblerMacroCallingEachotherDeadlock = 
# ==> AssemblerMacroCannotUseRecurency = 
# ==> AssemblerMacroParameterNotDefined = 
# ==> AssemblerUnknownLabel = 
#
# vga/SocVga.java
#
# ==> SocVgaComponent = 
#
# vga/VgaAttributes.java
#
# ==> VgaBufferAddress = 
# ==> VgaInitialDisplayMode = 
# ==> VgaMode1024x768 = 
# ==> VgaMode160x120 = 
# ==> VgaMode320x240 = 
# ==> VgaMode640x480 = 
# ==> VgaMode800x600 = 
# ==> VgaSoft1024x768 = 
# ==> VgaSoft160x120 = 
# ==> VgaSoft320x240 = 
# ==> VgaSoft640x480 = 
# ==> VgaSoft800x600 = 
# ==> VgaStartAddress = 
#
# vga/VgaMenu.java
#
# ==> ErrorCreatingHeaderAndOrCFile = 
# ==> ExportC = 
# ==> SelectDirectoryToStoreC = 
# ==> SuccesCreatingHeaderAndCFile = 
# ==> VgaMenuModeSelectFunctions = 


