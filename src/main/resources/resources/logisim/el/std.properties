#
# arith/Adder.java
#
adderCarryInTip = Carry In: αν 1, ένα επιπλέον 1 προστίθεται στην έξοδο
adderCarryOutTip = Carry Out: 1 αν το άθροισμα υπερχειλίζει τα διαθέσιμα bits
adderInputTip = Input: ένας από τους αριθμούς προς πρόσθεση
adderOutputTip = Output: Το άθροισμα των εισόδων (συμπεριλαμβανομένου του κρατουμένου εισόδου)
#
# arith/Arithmetic.java
#
adderComponent = Αθροιστής
arithmeticLibrary = Αριθμητικά
bitFinderComponent = Εϋρεση Bit
comparatorComponent = Συγκριτής
dividerComponent = Διαιρέτης
multiplierComponent = Πολλαπλασιαστής
negatorComponent = Αρνητικός Αριθμός
shifterComponent = Ολισθητής
subtractorComponent = Αφαιρέτης
#
# arith/BitAdder.java
#
bitAdderComponent = Μετρητής Bit
bitAdderInputTip = Input: τα bits που πρέπει να απαριθμηθούν
bitAdderOutputManyTip = Output: το πλήθος των bits με τιμή 1 στην είσοδο
gateInputsAttr = Αριθμός Εισόδων
#
# arith/BitFinder.java
#
bitFinderFindLabel = find
bitFinderHighLabel = high
bitFinderHighOption = Υψηλότερης-τάξης %s
bitFinderIndexHighTip = Index: δείκτης του υψηλότερης-ταξης %s της εισόδου
bitFinderIndexLowTip = Index: δείκτης του χαμηλότερης-τάξης %s της εισόδου
bitFinderInputTip = Input: τα bits τα οποία θα ψάξουμε
bitFinderLowLabel = low
bitFinderLowOption = Χαμηλότερης-τάξης %s
bitFinderPresentTip = Present: 1 αν η είσοδος περιέχει ένα %s
bitFinderTypeAttr = Τύπος
#
# arith/Comparator.java
#
comparatorEqualTip = Equal: 1 αν το A είναι ίσο με το B
comparatorGreaterTip = Greater: 1 αν το A είναι μεγαλύτερο του B
comparatorInputATip = A: ο αριθμός που προηγείται του χειριστηρίου σύγκρισης
comparatorInputBTip = B: ο αριθμός που έπεται του χειριστηρίου σύγκρισης
comparatorLessTip = Less: 1 αν το A είναι μικρότερο του B
comparatorType = Αριθμητικός Τύπος
twosComplementOption = Συμπλήρωμα ως προς 2
unsignedOption = Απροσήμαστο
#
# arith/Divider.java
#
dividerDividendLowerTip = Dividend Lower: το χαμηλότερης αξίας μισό του αριθμού που θα διαιρεθεί
dividerDividendUpperTip = Dividend Upper: το υψηλότερης αξίας μισό του αριθμού που θα διαιρεθεί
dividerDivisorTip = Divisor: ο αριθμός με τον οποίο θα γίνει η διαίρεση
dividerOutputTip = Output: το αποτέλεσμα της διαίρεσης
dividerRemainderOutput = rem
dividerRemainderTip = Remainder: το υπόλοιπο της διαίρεσης (dividend - output * divisor)
dividerUpperInput = upper
#
# arith/Multiplier.java
#
multiplierCarryInTip = Carry In: ένας αριθμός για να προστεθεί στην έξοδο
multiplierCarryOutTip = Carry Out: Τα υψηλότερης αξίας bits του γινομένου
multiplierInputTip = Input: ένας από τους αριθμούς για πολλαπλασιασμό
multiplierOutputTip = Output: το γινόμενο των εισόδων, συν το κρατούμενο εισόδου
#
# arith/Negator.java
#
negatorInputTip = Input: ο αριθμός που θα μετατραπεί σε αρνητικό
negatorOutputTip = Output: το συμπλήρωμα ως προς 2 της εισόδου
#
# arith/Shifter.java
#
shiftArithmeticRight = Αριθμητική Δεξιά
shifterDistanceTip = Distance: πόσες πολισθήσεις της εισόδου θα γίνουν
shifterInputTip = Input: τα bits που θα ολισθήσουμε
shifterOutputTip = Output: το αποτέλεσμα της ολίσθησης της εισόδου
shifterShiftAttr = Τύπος Ολίσθησης
shiftLogicalLeft = Λογική Αριστερά
shiftLogicalRight = Λογική Δεξιά
shiftRollLeft = Περιστροφή Αριστερά
shiftRollRight = Περιστροφή Δεξιά
#
# arith/Subtractor.java
#
subtractorBorrowInTip = Borrow In: αν 1, η έξοδος μειώνεται κατά 1
subtractorBorrowOutTip = Borrow Out: 1 αν η διαφορά έχει ως αποτέλεσμα αρνητικό αριθμό
subtractorMinuendTip = Αφαιρέτης: ο αριθμός από τον οποίο θα αφαιρέσουμε
subtractorOutputTip = Output: η διαφορά του αφαιρέτη και του αφαιρετέου
subtractorSubtrahendTip = Αφαιρετέος: ο αριθμός που θα αφαιρεθεί από τον αφαιρέτη
#
# base/Base.java
#
baseLibrary = Βασική
#
# base/Text.java
#
textComponent = Ετικέτα
textFontAttr = Γραμματοσειρά
textHorzAlignAttr = Οριζόντια Στοίχιση
textHorzAlignCenterOpt = Κέντρο
textHorzAlignLeftOpt = Αριστερά
textHorzAlignRightOpt = Δεξιά
textTextAttr = Κείμενο
textVertAlignAttr = Κάθετη Στοίχιση
textVertAlignBaseOpt = Βάση
textVertAlignBottomOpt = Κάτω
textVertAlignCenterOpt = Κέντρο
textVertAlignTopOpt = Επάνω
#
# base/VhdlParser.java
#
# ==> CannotFindEntityException = 
# ==> emptySourceException = 
# ==> genericDeclarationException = 
# ==> genericTypeException = 
# ==> genericValueException = 
# ==> invalidTypeException = 
# ==> portDeclarationException = 
#
# Builtin.java
#
builtinLibrary = Ενσωματωμένο
#
# gates/AndGate.java
#
andGateComponent = AND Πύλη
#
# gates/Buffer.java
#
bufferComponent = Απομονωτής
#
# gates/ControlledBuffer.java
#
controlledBufferComponent = Ελεγχόμενος Απομονωτής
controlledControlOption = Θέση Γραμμής Ελέγχου
controlledInverterComponent = Ελεγχόμενος Αντιστροφέας
controlledLeftHanded = Αριστερόχειρα
controlledRightHanded = Δεξιόχειρα
#
# gates/EvenParityGate.java
#
evenParityComponent = Άρτια Ισοτιμία
#
# gates/GateAttributes.java
#
gateOutput01 = 0/1
gateOutput0Z = 0/ασύνδετο
gateOutputAttr = Τιμή Εξόδου
gateOutputZ1 = ασύνδετο/1
gateSizeAttr = Μέγεθος Πύλης
gateSizeNarrowOpt = Στενό
gateSizeNormalOpt = Μέτριο
gateSizeWideOpt = Φαρδύ
xorBehaviorAttr = Συμπεριφορά Πολλαπλών-Εισόδων
xorBehaviorOdd = Όταν ένας περιττός αριθμός είναι ενεργός
xorBehaviorOne = Όταν μια είσοδο είναι ενεργή
#
# gates/Gates.java
#
gatesLibrary = Πύλες
#
# gates/NandGate.java
#
nandGateComponent = NAND Πύλη
#
# gates/NegateAttribute.java
#
gateNegateAttr = Αρνητικό %s
#
# gates/NorGate.java
#
norGateComponent = NOR Πύλη
#
# gates/NotGate.java
#
notGateComponent = NOT Πύλη
#
# gates/OddParityGate.java
#
oddParityComponent = Περιττή Ισοτιμία
#
# gates/OrGate.java
#
orGateComponent = OR Πύλη
#
# gates/PLA.java
#
# ==> Bit Width In = 
# ==> Bit Width Out = 
# ==> input = 
# ==> output = 
# ==> PLA = 
# ==> plaClickToEdit = 
# ==> plaEditMenuItem = 
# ==> plaProgram = 
#
# gates/PLATable.java
#
# ==> plaEditorTitle = 
# ==> plaFileCreateError = 
# ==> plaFileOpenError = 
# ==> plaLoadDialogTitle = 
# ==> plaLoadErrorTitle = 
# ==> plaSaveDialogTitle = 
# ==> plaSaveErrorTitle = 
#
# gates/XnorGate.java
#
xnorGateComponent = XNOR Πύλη
#
# gates/XorGate.java
#
xorGateComponent = XOR Πύλη
#
# InstanceComponent.java
#
# ==> KeywordNameError = 
# ==> MatchedLabelNameError = 
#
# InstanceTextField.java
#
changeLabelAction = Αλλαγή Ετικέτας
#
# io/DipSwitch.java
#
# ==> DIP = 
# ==> DipSwitchComponent = 
# ==> nrOfSwitch = 
#
# io/DotMatrix.java
#
dotMatrixComponent = LED Matrix
ioInputColumn = Στήλες
ioInputRow = Γραμμές
ioInputSelect = Επιλογή Γραμμές/Στήλες
ioMatrixCols = Στήλες Πίνακα
ioMatrixInput = Μορφή Εισόδου
ioMatrixPersistenceAttr = Φως Εμμονής
ioMatrixRows = Γραμμές Πίνακα
ioMatrixShape = Σχήμα Κουκίδας
ioShapeCircle = Κυκλικό
ioShapeSquare = Τετράγωνο
#
# io/extra/Buzzer.java
#
# ==> buzzerComponent = 
# ==> buzzerFrequecy = 
# ==> buzzerVolume = 
# ==> buzzerVolumeBitWidth = 
# ==> dHz (0.1Hz) = 
# ==> enableSound = 
# ==> Hz = 
#
# io/extra/DigitalOscilloscope.java
#
# ==> BorderColor = 
# ==> bothOption = 
# ==> ClearDiagram = 
# ==> DigitalOscilloscopeClock = 
# ==> DrawClockFrontLine = 
# ==> noOption = 
# ==> NStateAttr = 
# ==> ShowClockAttribute = 
#
# io/extra/ITA_IO.java
#
# ==> DigitalOscilloscopeComponent = 
# ==> Slider = 
#
# io/extra/PlaRom.java
#
memCSTip = Chip select: το 0 απενεργοποιεί το στοιχείο
# ==> PlaANDAttr = 
# ==> PlaOutputsAttr = 
# ==> PlaRomComponent = 
ramCSLabel = sel
#
# io/extra/PlaRomData.java
#
# ==> PlaEditWindowTitel = 
#
# io/extra/PlaRomPanel.java
#
demultiplexerInTip = Είσοδος
multiplexerOutTip = Έξοδος
#
# io/extra/ProgrammableGeneratorState.java
#
# ==> ProgrammableGeneratorComponent = 
#
# io/extra/Slider.java
#
# ==> left_to_rightOption = 
# ==> right_to_leftOption = 
#
# io/extra/Switch.java
#
# ==> switchComponent = 
#
# io/HexDigit.java
#
# ==> hexDigitDataTip = 
# ==> hexDigitDPTip = 
#
# io/Io.java
#
buttonComponent = Πλήκτρο
# ==> dipswitchComponent = 
hexDigitComponent = Hex Digit Display
ioActiveAttr = Ενεργό όταν Υψηλό?
ioBackgroundColor = Φόντο
ioColorAttr = Χρώμα
ioLibrary = Είσοδος/Έξοδος
ioOffColor = Χρώμα Απενεργοποίησης
ioOnColor = Χρώμα Ενεργοποίησης
joystickComponent = Χειριστήριο
ledComponent = LED
# ==> pioComponent = 
# ==> RGBledComponent = 
sevenSegmentComponent = 7-Segment Display
#
# io/Joystick.java
#
ioBitWidthAttr = Εύρος Bit
#
# io/Keyboard.java
#
keybAvailTip = Available: 1 όταν ο buffer διαθέτει χαρακτήρες
keybBufferLengthAttr = Μήκος Buffer
keybClearTip = Clear: όταν 1 αδειάζει το buffer
keybClockTip = Clock: με τον σκανδαλισμό καταναλώνεται ο πρώτος χαρακτήρας από το buffer
keybDesc = Πληκτρολόγιο (buffer cap. %s)
keybEnableTip = Read enable: το 0 απενεργοποιεί το ρολόι
keyboardComponent = Πληκτρολόγιο
keybOutputTip = Data: η ASCII τιμή του πρώτου χαρακτήρα του buffer
#
# io/PortIO.java
#
# ==> pioBuses = 
# ==> pioNumber = 
# ==> pioPins = 
# ==> pioShowBus = 
#
# io/ReptarLocalBus.java
#
# ==> repLBComponent = 
# ==> repLBTip = 
#
# io/RGBLed.java
#
# ==> BLUE = 
# ==> GREEN = 
# ==> RED = 
#
# io/SevenSegment.java
#
# ==> DecimalPoint = 
#
# io/Tty.java
#
ttyClearTip = Clear: όταν 1 καθαρίζει την οθόνη
ttyClockTip = Clock: ο σκανδαλισμός προσθέτει χαρακτήρα στην είσοδο
ttyColsAttr = Στήλες
ttyComponent = TTY
ttyDesc = TTY (%s rows, %s cols)
ttyDescShort = TTY
ttyEnableTip = Write enable: όταν 0 απενεργοποιεί το ρολόι
ttyInputTip = Data: η ASCII τιμή του επόμενου χαρακτήρα προς εγγραφή
ttyRowsAttr = Γραμμές
#
# io/Video.java
#
# ==> rgbVideoCLK = 
# ==> rgbVideoColor = 
# ==> rgbVideoComponent = 
# ==> rgbVideoCursor = 
# ==> rgbVideoData = 
# ==> rgbVideoHeight = 
# ==> rgbVideoReset = 
# ==> rgbVideoRST = 
# ==> rgbVideoScale = 
# ==> rgbVideoWE = 
# ==> rgbVideoWidth = 
# ==> rgbVideoX = 
# ==> rgbVideoY = 
#
# library/bcd2sevenseg.java
#
# ==> BCD Value = 
# ==> BCD2SevenSegment = 
# ==> Segment_A = 
# ==> Segment_B = 
# ==> Segment_C = 
# ==> Segment_D = 
# ==> Segment_E = 
# ==> Segment_F = 
# ==> Segment_G = 
#
# library/BFHPraktika.java
#
# ==> BFH mega functions = 
#
# library/bin2bcd.java
#
# ==> Bin2BCD = 
# ==> Binairy data bits = 
# ==> BinairyInputTip = 
#
# memory/AbstractFlipFlop.java
#
flipFlopClockTip = Clock: η κατάσταση ενημερώνεται με τον σκανδαλισμό
flipFlopNotQTip = Αντίστροφο τρέχουσας κατάστασης flip-flop
flipFlopPresetTip = Preset: όταν 1, η κατάσταση του ακροδέκτη μεταβαινει σε 1 ασύγχρονα
flipFlopQTip = Τρέχουσα κατάσταση flip-flop
flipFlopResetTip = Clear: όταν 1, η κατάσταση του ακροδέκτη μεταβαίνει σε 0 ασύγχρονα
#
# memory/Counter.java
#
counterCarryTip = Carry: είναι 1 όταν η τιμή φτάσει το μέγιστο (ελάχιστο κατά την μειούμενη μέτρηση)
counterClockTip = Clock: η τιμή μπορεί να ανανεώνεται με τον σκανδαλισμό
counterDataTip = Data: η τιμή προς φόρτωση στον μετρητή
counterEnableLabel = ct
counterEnableTip = Count: όταν 1, ο μετρητής αυξάνει (ή μειώνει αν Load = 1)
counterGoalAttr = Ενέργεια στην Υπερχείλιση
counterGoalContinue = Συνέχιση της μέτρησης
counterGoalLoad = Φόρτωση επόμενης τιμής
counterGoalStay = Παραμονή σε τιμή
counterGoalWrap = Περιστροφή
counterLabel = ctr
counterLoadTip = Load: όταν 1, φορτώνει από την είσοδο δεδομένων (αν Count = 0) ή μειώνει
counterMaxAttr = Μέγιστη τιμή
counterQTip = Output: τρέχουσα τιμή του μετρητή
counterResetTip = Clear: όταν 1, αρχικοποιείται σε 0 ασύγχρονα
# ==> counterUpDownTip = 
#
# memory/CounterShape.java
#
counterComponent = Μετρητής
#
# memory/DFlipFlop.java
#
dFlipFlopComponent = D Flip-Flop
#
# memory/Mem.java
#
# ==> ByteLabel = 
# ==> GigabyteLabel = 
# ==> KilobyteLabel = 
# ==> MegabyteLabel = 
ramAddrLabel = A
ramAddrWidthAttr = Εύρος Ψηφίων Διεύθυνσης
ramDataWidthAttr = Εύρος Ψηφίων Δεδομένων
# ==> ramSelAttr = 
#
# memory/MemMenu.java
#
ramClearMenuItem = Καθαρισμός Περιεχομένων
ramConfirmClearMsg = Είστε σίγουροι ότι θέλετε να μηδενίσετε την μνήμη;
ramConfirmClearTitle = Επιβεβαίωση Καθαρισμού
ramEditMenuItem = Επεξεργασία Περιεχομένων...
ramLoadDialogTitle = Φόρτωση Εικόνας RAM
ramLoadErrorTitle = Σφάλμα Φόρτωσης
ramLoadMenuItem = Φόρτωση Εικόνας...
ramSaveDialogTitle = Αποθήκευση Εικόνας RAM
ramSaveErrorTitle = Σφάλμα κατά την Αποθήκευση
ramSaveMenuItem = Αποθήκευση Εικόνας...
#
# memory/Memory.java
#
jkFlipFlopComponent = J-K Flip-Flop
memoryLibrary = Μνήμη
randomComponent = Γεννήτρια Τυχαίων Αριθμών
romComponent = ROM
#
# memory/Ram.java
#
memAddrTip = Address: η τοποθεσία που προσπελαύνεται στην μνήμη
memDataTip = Data: η τιμή που φορτώνεται από τη διεύθυνση
ramBusTip = Data: η τιμή φορτώνεται ή αποθηκεύεται στη διεύθυνση
ramClkTip = Clock: η τιμή της μνήμης ανανεώνεται στην άνοδο από 0 σε 1
ramComponent = RAM
# ==> ramContentsAttr = 
ramDataLabel = D
ramInTip = Input: τιμή προς αποθήκευση στη διεύθυνση
ramOELabel = ld
ramOETip = Load: αν 1, φορτώνει τη μνήμη στην έξοδο
ramWELabel = str
ramWETip = Store: αν 1, αποθηκεύει την είσοδο στη μνήμη
romContentsValue = (πατήστε για επεξεργασία)
#
# memory/RamAttributes.java
#
# ==> ramBidirDataBus = 
# ==> ramByteEnables = 
# ==> ramDataAttr = 
# ==> ramNoByteEnables = 
# ==> ramSeparateDataBus = 
# ==> ramWithByteEnables = 
#
# memory/Random.java
#
randomClockTip = Clock: η τιμή μπορεί να ανανεώνεται με τον σκανδαλισμό
# ==> randomLabel = 
randomNextTip = Enable: μεταβαίνει στο επόμενο αριθμό της ακολουθίας με τον σκανδαλισμό του ρολογιού
randomQTip = Output: τρέχων αριθμός στην ακολουθία
randomResetTip = Clear: όταν 1, αρχικοποιείται στον αρχικό "γεννήτορα" ασύγχρονα
randomSeedAttr = Γεννήτορας
# ==> randomWidthLabel = 
#
# memory/Register.java
#
registerClkTip = Clock: η τιμή ανανεώνεται με τον σκανδαλισμό
registerClrTip = Clear: όταν 1, η τιμή του ακροδέκτη μεταβαίναι σε 0 ασύγχρονα
registerDTip = Data: η αποθηκευμένη τιμή με τον σκανδαλισμό του ρολογιού
registerEnableTip = Enable: όταν 0, οι σκανδαλισμοί του ρολογιού δεν επηρεάζουν
registerLabel = reg
registerQTip = Output: η τρέχουσα τιμή του καταχωρητή
# ==> registerShowInTab = 
registerWidthLabel = (%sb)
#
# memory/RegisterShape.java
#
registerComponent = Καταχωρητής
#
# memory/Rom.java
#
romContentsAttr = Περιεχόμενα
#
# memory/RomContentsListener.java
#
romChangeAction = Επεξεργασία Περιεχομένων της ROM
#
# memory/ShiftRegister.java
#
shiftRegClearTip = Clear: όταν 1, αρχικοποιούνται όλα σε 0 ασύγχρονα
shiftRegClockTip = Clock: οι τιμές μπορούν να ανανεώνονται με τον σκανδαλισμό
shiftRegInTip = Input: η τιμή προς ολίσθηση στο πρώτο στάδιο
shiftRegisterLabel1 = shift reg
shiftRegisterLabel2 = %sx%s
shiftRegLengthAttr = Αριθμός Σταδίων
shiftRegLoadTip = Load: όταν 1 (με shift = 0), όλα τα στάδια φορτώνουν από τις εισόδους
shiftRegOutTip = Output: είναι το περιεχόμενο του τελευταίου σταδίου
shiftRegParallelAttr = Παράλληλη Φόρτωση
shiftRegShiftTip = Shift: η ολίσθηση είναι ανενεργή όταν είναι 0
#
# memory/ShiftRegisterLogger.java
#
shiftRegisterComponent = Καταχωρητής Ολίσθησης
#
# memory/SRFlipFlop.java
#
srFlipFlopComponent = S-R Flip-Flop
#
# memory/TFlipFlop.java
#
tFlipFlopComponent = T Flip-Flop
#
# plexers/BitSelector.java
#
bitSelectorDataTip = Δεδομένα
bitSelectorGroupAttr = Bits Εξόδου
bitSelectorOutputTip = Output: η τιμή της επιλεγμένης ομάδας bits από τα δεδομένα
bitSelectorSelectTip = Select: υποδεικνύει ποια ομάδα από τα δεδομένα έχει επιλεγεί
#
# plexers/Decoder.java
#
decoderEnableTip = Enable: όταν δεν είναι 0, η επιλεγμένη έξοδος είναι η είσοδος
decoderOutTip = Έξοδος %s
decoderSelectTip = Select: υποδεικνύει ποια έξοδο γίνεται 1
#
# plexers/Demultiplexer.java
#
demultiplexerEnableTip = Enable: όταν δεν είναι 0, η επιλεγμένη έξοδος είναι η είσοδος
demultiplexerSelectTip = Select: υποδεικνύει ποια έξοδος δέχεται την είσοδο
#
# plexers/Multiplexer.java
#
multiplexerComponent = Πολυπλέκτης
multiplexerEnableTip = Enable: όταν δεν είναι 0, έξοδος είναι η επιλεγμένη είσοδος
multiplexerSelectTip = Select: υποδεικνύει ποια είσοδο οδηγείται στην έξοδο
#
# plexers/Plexers.java
#
bitSelectorComponent = Επιλογέας Bit
decoderComponent = Αποκωδικοποιητής
demultiplexerComponent = Αποπλέκτης
plexerDisabledAttr = Απενεργοποιημένη Έξοδος
plexerDisabledFloating = Ασύνδετο
plexerDisabledZero = Μηδέν
# ==> plexerEnableAttr = 
plexerLibrary = Πλέκτες/Κωδικοποιητές
plexerSelectBitsAttr = Επιλογή Ψηφίων
# ==> plexerSelectBottomLeftOption = 
# ==> plexerSelectLocAttr = 
# ==> plexerSelectTopRightOption = 
plexerThreeStateAttr = Τριών-Καταστάσεων?
#
# plexers/PriorityEncoder.java
#
priorityEncoderComponent = Κωδικοποιητής Προτεραιότητας
priorityEncoderEnableOutTip = Enable Output: 1 αν είναι ενεργοποιημένο και καμία είσοδος δεν είναι 1
priorityEncoderGroupSignalTip = Group Select: 1 αν είναι ενεργοποιημένο και οποιαδήποτε είσοδος είναι 1
priorityEncoderInTip = Είσοδος %s
priorityEncoderOutTip = Output: διεύθυνση της υψηλότερης-βαθμονομημένης με 1 εισόδου
#
# StdAttr.java
#
ioLabelColorAttr = Χρώμα Ετικέτας
# ==> stdAppearanceAttr = 
# ==> stdClassicAppearance = 
stdDataWidthAttr = Bits Δεδομένων
# ==> stdEvolutionAppearance = 
stdFacingAttr = Προσανατολισμός
stdLabelAttr = Ετικέτα
# ==> stdLabelCenter = 
stdLabelFontAttr = Γραμματοσειρά Ετικέτας
# ==> stdLabelLocAttr = 
# ==> stdLabelVisibility = 
# ==> stdLogisimEvolutionAppearance = 
stdTriggerAttr = Σκανδαλισμός
stdTriggerFalling = Αρνητική Ακμή
stdTriggerHigh = Υψηλό Επίπεδο
stdTriggerLow = Χαμηλό Επίπεδο
stdTriggerRising = Θετική Ακμή
#
# tcl/Tcl.java
#
# ==> tclConsoleReds = 
# ==> tclLibrary = 
#
# tcl/TclComponentAttributes.java
#
# ==> tclConsoleContentFile = 
#
# tcl/TclGeneric.java
#
# ==> tclGeneric = 
# ==> tclInterfaceDefinition = 
# ==> tclInterfaceDefinitionValue = 
#
# ttl/AbstractTtlGate.java
#
demultiplexerOutTip = Έξοδος %s
# ==> GNDPin = 
multiplexerInTip = Είσοδος %s
# ==> VCCPin = 
#
# ttl/DisplayDecoder.java
#
# ==> BI = 
# ==> BlankingInputInTip = 
# ==> DisplayDecoderComponent = 
# ==> DisplayDecoderInTip = 
# ==> DisplayDecoderOutTip = 
# ==> ioMultiBit = 
# ==> LampTestInTip = 
# ==> LT = 
memEnableLabel = en
priorityEncoderEnableInTip = Enable Input: με 0 απενεργοποιεί το στοιχείο
# ==> RBI = 
# ==> RippleBlankingInputInTip = 
#
# ttl/TTL.java
#
# ==> ShowInternalStructure = 
# ==> TTL7400 = 
# ==> TTL7402 = 
# ==> TTL7404 = 
# ==> TTL7408 = 
# ==> TTL7410 = 
# ==> TTL7411 = 
# ==> TTL74125 = 
# ==> TTL7413 = 
# ==> TTL7414 = 
# ==> TTL74165 = 
# ==> TTL74175 = 
# ==> TTL7418 = 
# ==> TTL7419 = 
# ==> TTL7420 = 
# ==> TTL7421 = 
# ==> TTL7424 = 
# ==> TTL74266 = 
# ==> TTL7427 = 
# ==> TTL74273 = 
# ==> TTL74283 = 
# ==> TTL7430 = 
# ==> TTL7432 = 
# ==> TTL7436 = 
# ==> TTL74377 = 
# ==> TTL7442 = 
# ==> TTL7443 = 
# ==> TTL7444 = 
# ==> TTL7447 = 
# ==> TTL7451 = 
# ==> TTL7454 = 
# ==> TTL7458 = 
# ==> TTL7464 = 
# ==> TTL7474 = 
# ==> TTL7485 = 
# ==> TTL7486 = 
# ==> VccGndPorts = 
#
# wiring/BitExtender.java
#
extenderInAttr = Εύρος Bit Εισόδου
extenderInputLabel = είσοδος
extenderInputType = Είσοδος
extenderMainLabel = επέκταση
extenderOneLabel = 1
extenderOneType = Ένα
extenderOutAttr = Εύρος Bit Εξόδου
extenderSignLabel = πρόσημο
extenderSignType = Πρόσημο
extenderTypeAttr = Τύπος Επέκτασης
extenderZeroLabel = 0
extenderZeroType = Μηδέν
#
# wiring/Clock.java
#
clockComponent = Ρολόι
clockHighAttr = Υψηλή Διάρκεια
clockLowAttr = Χαμηλή Διάρκεια
#
# wiring/Constant.java
#
constantComponent = Σταθερά
constantValueAttr = Τιμή
#
# wiring/DoNotConnect.java
#
# ==> noConnectionComponent = 
#
# wiring/DurationAttribute.java
#
clockDurationOneValue = 1 Παλμός
clockDurationValue = %s Παλμοί
durationLargeMessage = Η τιμή πρέπει να είναι %s ή λιγότερο.
durationSmallMessage = Η τιμή πρέπει να είναι τουλάχιστον %s.
freqInvalidMessage = Η τιμή δεν είναι έγκυρος ακέραιος
# ==> PORDurationOneValue = 
# ==> PORDurationValue = 
#
# wiring/Pin.java
#
# ==> PinCancel = 
pinComponent = Ακροδέκτης
# ==> PinEnterDecimal = 
pinFrozenQuestion = Ο ακροδέκτης είναι διασυνδεδεμένος στην κατάσταση του κυκλώματος. Δημιουργία μιας νέας κατάστασης του κυκλώματος?
pinFrozenTitle = Ακροδέτης συνδεδεμένος στο Κύκλωμα.
pinInputName = Είσοδος
pinInputToolTip = Προσθήκη ενός ακροδέκτη εισόδου
# ==> PinOkay = 
pinOutputAttr = Έξοδος?
pinOutputName = Έξοδος
pinOutputToolTip = Προσθήκη ενός ακροδέκτη εξόδου
pinPullAttr = Συμπεριφορά Οδήγησης
pinPullDownOption = Οδήγηση Κάτω
pinPullNoneOption = Αμετάβλητο
pinPullUpOption = Οδήγηση Πάνω
pinThreeStateAttr = Τριών-Καταστάσεων?
#
# wiring/Power.java
#
powerComponent = Ισχύς
#
# wiring/PowerOnReset.java
#
# ==> porHighAttr = 
# ==> PowerOnResetComponent = 
#
# wiring/Probe.java
#
probeComponent = Δειγματολήπτης
#
# wiring/ProbeAttributes.java
#
# ==> probeNewPin = 
#
# wiring/PullResistor.java
#
pullComponent = Αντίσταση Οδήγησης
pullErrorType = Σφάλμα
pullOneType = Ένα
pullTypeAttr = Διεύθυνση Οδήγησης
pullZeroType = Μηδέν
#
# wiring/Transistor.java
#
# ==> transistorNDrain = 
# ==> transistorNGate = 
# ==> transistorNSource = 
# ==> transistorPDrain = 
# ==> transistorPGate = 
# ==> transistorPSource = 
transistorTypeAttr = Τύπος
transistorTypeN = N-Type
transistorTypeP = P-Type
#
# wiring/TransmissionGate.java
#
transmissionGateComponent = Πύλη Μετάδοσης
# ==> transmissionGateDrain = 
# ==> transmissionGateNGate = 
# ==> transmissionGatePGate = 
# ==> transmissionGateSource = 
#
# wiring/Tunnel.java
#
tunnelComponent = Σήραγγα
#
# wiring/Wiring.java
#
extenderComponent = Επέκταση Bit
groundComponent = Γείωση
transistorComponent = Τρανζίστορ
wiringGateAttr = Θέση Πύλης
wiringGateBottomRightOption = Κάτω/Δεξιά
wiringGateTopLeftOption = Πάνω/Αριστερά
wiringLibrary = Καλωδίωση


