#
# gui/Analyzer.java
#
analyzerWindowTitle = Analyse Combinatoire
inputsOutputsTab = Entr\u00E9es & Sorties
tableTab = Table
expressionTab = Expression
minimizedTab = Karnaugh
inputsOutputsTabTip = Affichez et modifiez l'ensemble des variables d'entr\u00E9e et de sortie.
tableTabTip = Visualiser et manipuler la table de v\u00E9rit\u00E9.
expressionTabTip = Visualiser et manipuler les expressions de sortie.
minimizedTabTip = Visualiser les tables de Karnaugh pour chaque entr\u00E9e.
analyzePleaseWait = SVP. attendez...
#
# gui/expressionTab.java
#
outputExpressionEdit = Expressions de sortie (double-cliquez pour \u00E9diter):
#
# gui/ImportTableButton.java and gui/ExportTableButton.java
#
importTableButton = Tableau d'importation
exportTableButton = Tableau d'exportation
saveButton = Exporter la  table
openButton = Exporter la  table de v\u00E9rit\u00E9
saveErrorTitle = Erreur d'enregistrement du fichier
notFileMessage = Pas un fichier:% s
cantReadMessage = Impossible de lire le fichier:% s
cantWriteMessage = Impossible d'\u00E9crire le fichier:% s
confirmOverwriteMessage = \u00CAtes-vous s\u00FBr de vouloir \u00E9craser le fichier% s?
confirmOverwriteTitle = Confirmer l'\u00E9crasement
openErrorTitle = Erreur de lecture du fichier
tableParseErrorTitle = Erreur d'analyse de la table de v\u00E9rit\u00E9
tableParseErrorMessage = Ignorer les erreurs et r\u00E9essayer?
tableRemark1 = # Table de v\u00E9rit\u00E9
tableRemark2 = # G\u00E9n\u00E9r\u00E9 \u00E0 partir du circuit %s
tableRemark3 = # Export\u00E9 dans %s
tableRemark4 = # Conseils et remarques sur la mise en forme: \n# * Vous pouvez modifier ce fichier, puis le r\u00E9importer dans Logisim! \n# * Tout ce qui suit un '#' correspond \u00E0 un commentaire et sera ignor\u00E9. \n# * Lignes vides et lignes de s\u00E9paration (par exemple, ~~~~~~) sont ignor\u00E9s. \n# * Conservez les noms de colonne simples (sans espace, ni ponctuation, etc.) \n# * 'Nom [N..0]' indique une variable de N + 1 bits , alors que \n# 'Nom' \u00E0 lui seul indique une variable de 1 bit. \n# * Vous pouvez utiliser 'x' ou '-' pour indiquer \ "ne vous souciez pas \" pour des \n# bits d'entr\u00E9e et de sortie . \n# * Vous pouvez utiliser la notation binaire (par exemple, '10100011xxxx') ou \n# ou hex (par exemple, 'C3x'). Logisim d\u00E9terminera qui est lequel.
tableTxtFileFilter = Table de v\u00E9rit\u00E9 Logisim-evolution (* .txt)
tableCsvFileFilter = Table de v\u00E9rit\u00E9 Logisim-evolution (* .csv)
DoNotKnowHowto = impossible de lire ou \u00E9crire des fichiers '%s' (l'extension doit \u00EAtre .txt ou .csv).
cantImportFormatError = Impossible d'importer ce type de donn\u00E9es
#
# data/CsvInterpretor.java
#
CsvIncorrectLine = La ligne %d du fichier csv '%s' comporte %d entr\u00E9es au lieu des %d obligatoires, abandon.
CsvIncorrectVarName = La ligne %d du fichier csv '%s' contient l'\u00E9tiquette malformatt\u00E9e '%s', abandon
CsvIncorrectBitOrder = La ligne %d du fichier csv '%s' contient une s\u00E9quence binaire mal ordonn\u00E9e pour la variable '%s', abandon.
CsvDuplicatedBit = La ligne %d du fichier csv '%s' contient le double du bit %d de la variable '%s', abandon.
CsvDuplicatedVar = La ligne %d du fichier csv '%s' contient plusieurs fois la variable '%s', abandon.
CsvNotEnoughEmpty = La ligne %d du fichier csv '%s' ne contient pas assez de champs vides apr\u00E8s la variable '%s', abandon.
CsvIncorrectEmpty = La ligne %d du fichier csv '%s' contient un champ vide incorrect \u00E0 la position %d, abandon.
CsvNoSepFound = La ligne %d du fichier csv '%s' ne contient aucun champ s\u00E9parateur, abandon.
CsvBitNotSpecified = La ligne %d du fichier csv '%s' ne contient pas le bit %d de la variable '%s', abandon.
CsvInvalidEntry = La ligne %d du fichier csv '%s' contient une entr\u00E9e non valide '%s' dans le champ %d, abandon.
CsvNoEntries = Le fichier csv '%s' ne contient aucune entr\u00E9e de la table de v\u00E9rit\u00E9, abandon.
CsvNoInputsFound = La ligne %d du fichier csv '%s' ne contient aucune entr\u00E9e, abandon.
#
# gui/ExportLatexButton.java
#
tableLatexFilter = Document TeX Logisim-evolution (*.tex)
exportLatexButton = Exporter TeX
latexBabelLanguage = Anglais
latexHeader = Document g\u00E9n\u00E9r\u00E9 par Logisim-evolution sur %s
latexIntroduction = introduction
latexIntroductionText = Ce document a \u00E9t\u00E9 g\u00E9n\u00E9r\u00E9 par logisim-evolution. Toute partie des sources TeX peut \u00EAtre utilis\u00E9e dans vos propres documents sans aucun probl\u00E8me. Si vous souhaitez utiliser tout/partie des sources TeX g\u00E9n\u00E9r\u00E9es, veuillez (1) ne pas oublier d\u2019inclure les packages requis et (2) inclure une remarque indiquant que cette source a \u00E9t\u00E9 g\u00E9n\u00E9r\u00E9e par logisim-evolution.
latexEmpty = Analyseur vide
latexEmptyText = Comme l'analyseur n'avait pas de variables d'entr\u00E9e et/ou de sortie au moment o\u00F9 ce document a \u00E9t\u00E9 g\u00E9n\u00E9r\u00E9, rien ne s'affiche.
latexTruthTable = Table de v\u00E9rit\u00E9
latexTruthTableText = Le tableau peut \u00EAtre trop gros pour \u00EAtre affich\u00E9 sur la page. Au moment de la g\u00E9n\u00E9ration, aucun calcul n'a \u00E9t\u00E9 effectu\u00E9 sur la taille du tableau par rapport \u00E0 la largeur/hauteur de la page.
latexTruthTableToBig = \\\\ ~ \\\\ La table de v\u00E9rit\u00E9 a plus de %d entr\u00E9es, cela n'a aucun sens de le montrer ici.
latexTruthTableCompact = Table de v\u00E9rit\u00E9 compact\u00E9e
latexTruthTableComlete = Table de v\u00E9rit\u00E9 compl\u00E8te
latexKarnaugh = Diagrammes de Karnaugh
latexKarnaughToBig = Impossible d'afficher les diagrammes kranaugh avec plus de %d entr\u00E9es.
latexKarnaughText = Cette section pr\u00E9sente diff\u00E9rentes versions des diagrammes de Karnaugh des fonctions donn\u00E9es.
latexKarnaughEmpty = Diagrammes de Karnaugh vides
latexKarnaughFilledIn = Rempli dans les diagrammes de Karnaugh
latexKarnaughFilledInGroups = Rempli dans les diagrammes de Karnaugh avec des couvertures
latexMinimal = Expressions minimales
#
# gui/CsvReadParameterDialog.java
#
seperatorSpace = {espace}
SeperatorTab = {tab}
UsedQuotesInFile = S\u00E9lectionnez le caract\u00E8re "quote" utilis\u00E9 dans le fichier cvs:
UsedSeperatorInFile = S\u00E9lectionnez le caract\u00E8re "s\u00E9parateur" utilis\u00E9 dans le fichier csv:
cvsFilePreview = Aper\u00E7u des quatre premi\u00E8res lignes du fichier lu:
ConfirmCsvParameters = Continuer
#
# gui/TableTab.java
#
tableExpand = Afficher toutes les lignes
tableCompact = R\u00E9duire les lignes dupliqu\u00E9es
tableRowsShown = %d de %d lignes affich\u00E9es
#
# gui/BuildCircuitButton.java
#
buildCircuitButton = Construire le circuit
buildProjectLabel = Projet de destination:
buildNameLabel = Nom du circuit:
buildTwoInputsLabel = Utiliser des portes \u00E0 deux entr\u00E9es uniquement
buildNandsLabel = Utiliser des ports NAND uniquement
buildDialogTitle = R\u00E9aliser le circuit
buildDialogErrorTitle = R\u00E9alisation du circuit impossible
buildNeedProjectError = Vous devez s\u00E9lectionner un projet destination.
buildNeedCircuitError = Vous devez d\u00E9finir un nom de circuit.
buildConfirmReplaceMessage = Etes-vous s\u00FBr de vouloir remplacer le circuit %s?
buildConfirmReplaceTitle = Confirmer le remplacement
replaceCircuitAction = Remplacement du circuit
#
# gui/ExpressionEditorPanel.java
#
exprClearButton = Effacer
exprRevertButton = Revenir
exprEnterButton = Entrer
#
# gui/ExpressionPanel.java
#
expressionEmpty = (vide)
expressionCalc = Calculer une expression
#
# gui/KarnaughMapPanel.java
#
karnaughNoOutputError = Aucune entr\u00E9e s\u00E9lectionn\u00E9e.
karnaughTooManyInputsError = Trop d'entr\u00E9es pour la table.
karnaughNoInputsError = Aucune entr\u00E9e disponible.
NoSelectedKmapGroup = Aucun groupe s\u00E9lectionn\u00E9.
SelectedKmapGroup = Groupe s\u00E9lectionn\u00E9:
#
# gui/MinimizedTabPanel.java
#
minimizedFormat = Format:
minimizedSumOfProducts = Somme des produits
minimizedProductOfSums = Produit des sommes
minimizedSetButton = D\u00E9finir comme expression
KmapNumberedStyle = Num\u00E9rot\u00E9
KMapLinedStyle = Doubl\u00E9
KmapStyle = Style:
ExpressionNotation = Notation:
expressionLogicrepresentation = Logique
expressionAltLogicrepresentation = Logique alternative
expressionMathrepresentation = Math\u00E9matique
expressionProgboolsrepresentation = Programmation avec des bool\u00E9ens
expressionProgbitsrepresentation = Programmation avec des bits
#
# gui/OutputSelector.java
#
outputSelectLabel = Sortie:
#
# gui/SimpleTruthTablePanel.java
#
tableEmptyMessage = (table vide)
tableNullHeader = (nul)
#
# gui/TableTab.java
#
tableNoInputs = (pas d'entr\u00E9es)
tableNoOutputs = (pas de sorties)
#
# gui/TableTabClip.java
#
clipPasteErrorTitle = Erreur de collage
clipPasteSupportedError = Le contenu du presspapier ne peut pas \u00EAtre coll\u00E9 dans l'\u00E9diteur.
clipPasteEndError = Le presse papier exc\u00E8de la fin de la table.
clipPasteSizeError = La destination doit \u00EAtre de la m\u00EAme taille que le presse papier.
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Lignes de compactage
#
# gui/VariableListPanel.java
#
inputVariables = Variables d'entr\u00E9e
outputVariables = Variables de sortie
variableRemoveButton = Enlever
variableMoveUpButton = Monter
variableMoveDownButton = Descendre
variableAddButton = Ajouter
variableRenameButton = Renomer
variableStartError = Le nom doit commencer par une lettre.
variablePartError = Le nom ne peut pas contenir '%s'.
variableDuplicateError = Le nom double une variable existante.
variableDuplicateError1 = Le nom duplique la variable existante dans l'onglet %s.
variableMaximumError = (Taille maximum de %s atteinte.)
HdlKeyword = Le nom est un mot cl\u00E9 HDL, ceci n'est pas autoris\u00E9
InvalidCharacter = Le nom utilise le caract\u00E8re non valide '%s'.
missingIdentifierError = Identifiant manquant avant indice: "%s"
missingBraceError = Aucune accolade correspondante: "%s"
missingSubscriptError = Indice manquant: "%s"
variableRangeStartPar = Palge: [ manquant 
variableRangeMSBWrong = Plage: commen\u00E7ant par [ doit \u00EAtre suivi d'un nombre
variableRangeWrongSep = Plage: l'index MSB et l'index LSB doivent \u00EAtre s\u00E9par\u00E9s par ..
variableRangeWrongLB = Plage: l'index MSB doit \u00EAtre plus grand / \u00E9gal \u00E0 l'index LSB
variableRangeFinalPar = Plage: manque ] directement apr\u00E8s l'indice LSB
variableRangeInvalChar = Plage: caract\u00E8res non valides apr\u00E8s le ]
variableFormat = Les variables doivent \u00EAtre de la forme 'nom[N..0]'
variableTooMuchBits = Les variables ne peuvent pas avoir plus de 32 bits de large
badVariableBitFormError = Le nom de la variable doit \u00EAtre de la forme 'nom[i]'
badVariableIndexError = L'indice de bit variable doit \u00EAtre un entier
badVariableColonError = Le nom de la variable doit appara\u00EEtre avant ':'
#
# model/Entry.java
#
busError = Conflit entre les valeurs de sortie du circuit.
oscillateError = Le circuit oscille.
#
# model/Parser.java
#
implicitAndOperator = (AND Implicite)
unexpectedAssignmentError = Op\u00E9rateur d'affectation inattendue: "% s"
invalidCharacterError = Caract\u00E9res non reconnus: %s
missingLeftOperandError = Il manque l'op\u00E9rande gauche de %s.
missingRightOperandError = Il manque l'op\u00E9rande droite de %s.
lparenMissingError = Il manque une parenth\u00E8se ouvrante.
rparenMissingError = Il manque une parenth\u00E8se fermante.
badVariableName = %s n'est pas une variable d'entr\u00E8e.
unexpectedApostrophe = Erreur d'apostrophe ("'")
