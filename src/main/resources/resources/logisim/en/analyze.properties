#
# gui/Analyzer.java
#
analyzerWindowTitle = Combinational Analysis
inputsTab = Inputs
outputsTab = Outputs
tableTab = Table
expressionTab = Expression
minimizedTab = Minimized
inputsTabTip = View and edit the set of input variables.
outputsTabTip = View and edit the set of output variables.
tableTabTip = View and manipulate the truth table.
expressionTabTip = View and manipulate outputs' expressions.
minimizedTabTip = View minimized expressions corresponding to truth table.
analyzePleaseWait = Please wait.......
#
# gui/ImportTableButton.java and gui/ExportTableButton.java
#
importTableButton = Import Table
exportTableButton = Export Table
saveButton = Export Truth Table
openButton = Import Truth Table
saveErrorTitle = Error Saving File
notFileMessage = Not a file: %s
cantReadMessage = Can't read file: %s
cantWriteMessage = Can't write file: %s
confirmOverwriteMessage = Are you sure you want to overwrite file %s?
confirmOverwriteTitle = Confirm Overwrite
openErrorTitle = Error Reading File
tableParseErrorTitle = Error Parsing Truth Table
tableParseErrorMessage = Ignore errors and try again?
tableRemark1 = # Truth table
tableRemark2 = # Generated from circuit %s
tableRemark3 = # Exported on %s
tableRemark4 = # Hints and Notes on Formatting:\n# * You can edit this file then import it back into Logisim!\n# * Anything after a '#' is a comment and will be ignored.\n# * Blank lines and separator lines (e.g., ~~~~~~) are ignored.\n# * Keep column names simple (no spaces, punctuation, etc.)\n# * 'Name[N..0]' indicates an N+1 bit variable, whereas\n#   'Name' by itself indicates a 1-bit variable.\n# * You can use 'x' or '-' to indicate \"don't care\" for both\n#   input and output bits.\n# * You can use binary (e.g., '10100011xxxx') notation or\n#   or hex (e.g., 'C3x'). Logisim will figure out which is which.
tableTxtFileFilter = Logisim-evolution Truth Table (*.txt)
tableCsvFileFilter = Logisim-evolution Truth Table (*.csv)
DoNotKnowHowto = Do not know howto read or write file '%s' (extention should be .txt or .csv).
#
# data/CsvInterpretor.java
#
CsvIncorrectLine = Line %d of the csv file '%s' has %d entries instead of the %d required, aborting.
CsvIncorrectVarName = Line %d of the csv file '%s' contains the malformatted label '%s', aborting.
CsvIncorrectBitOrder = Line %d of the csv file '%s' contains a malordered bit-sequence for variable '%s', aborting.
CsvDuplicatedBit = Line %d of the csv file '%s' contains twice the bit %d of the variable '%s', aborting.
CsvDuplicatedVar = Line %d of the csv file '%s' contains multiple times the variable '%s', aborting.
CsvNotEnoughEmpty = Line %d of the csv file '%s' contains not enough empty fields after variable '%s', aborting.
CsvIncorrectEmpty = Line %d of the csv file '%s' contains an incorrect empty field at position %d, aborting.
CsvNoSepFound = Line %d of the csv file '%s' contains no seperator field, aborting.
CsvBitNotSpecified = Line %d of the csv file '%s' does not contain bit %d of variable '%s', aborting.
CsvInvalidEntry = Line %d of the csv file '%s' containt an invalid entry '%s' at field %d, aborting.
CsvNoEntries = The csv file '%s' does not contain any truth table entries, aborting.
#
# gui/ExportLatexButton.java
#
tableLatexFilter = Logisim-evolution Tex document (*.tex)
exportLatexButton = Export Tex
latexBabelLanguage = english
latexHeader = Logisim-evolution generated document on %s
latexIntroduction = Introduction
latexIntroductionText = This document was generated by logisim-evolution. Any part of the Tex sources can be used in your own documents without any problems. In case you want to use all/parts of this generated tex-sources please (1) do not forget to include the required packages, and (2) include a remark that this source was generated by logisim-evolution.
latexEmpty = Empty analyzer
latexEmptyText = As the analyzer did not have input variables and/or output variables at the moment this document was generated there is nothing to show.
latexTruthTable = Truth table
latexTruthTableText = The table may be way to big to be displayed on the page. At generation time no calculation was done on the size of the table with respect to the width of the page.
latexTruthTableToBig = \\\\~\\\\The truth table has more than %d entries, it makes no sense to show it here.
latexTruthTableCompact = Compacted truth table
latexTruthTableComlete = Complete truth table
latexKarnaugh = Karnaugh diagrams
latexKarnaughToBig = Cannot display kranaugh diagrams with more than %d input vars.
latexKarnaughText = This section shows various versions of the Karnaugh diagramms of the given functions.
latexKarnaughEmptyIndexed = Empty Karnaugh diagramms with index
latexKarnaughEmpty = Empty Karnaugh diagramms without index
latexKarnaughFilledIn = Filled in Karnaugh diagramms
latexMinimal = Minimal expressions
#
# gui/CsvReadParameterDialog.java
#
seperatorSpace = {space}
SeperatorTab = {tab}
UsedQuotesInFile = Select the "quote" character that is used in the cvs file:
UsedSeperatorInFile = Select the "seperator" character that is used in the cvs file:
cvsFilePreview = Preview of the first four rows of the read-in file:
ConfirmCsvParameters = Continue
#
# gui/TableTab.java
#
tableExpand = Show All Rows
tableCompact = Collapse Duplicated Rows
tableRowsShown = %d of %d rows shown
#
# gui/BuildCircuitButton.java
#
buildCircuitButton = Build Circuit
buildProjectLabel = Destination Project:
buildNameLabel = Circuit Name:
buildTwoInputsLabel = Use Two-Input Gates Only
buildNandsLabel = Use NAND Gates Only
buildDialogTitle = Build Circuit
buildDialogErrorTitle = Could Not Build Circuit
buildNeedProjectError = You must select a destination project.
buildNeedCircuitError = You must specify a circuit name.
buildConfirmReplaceMessage = Are you sure you want to replace the circuit %s?
buildConfirmReplaceTitle = Confirm Replace
replaceCircuitAction = Replace Circuit
#
# gui/ExpressionEditorPanel.java
#
exprClearButton = Clear
exprRevertButton = Revert
exprEnterButton = Enter
#
# gui/ExpressionPanel.java
#
expressionEmpty = (empty)
expressionCalc = Calculating Expression
#
# gui/KarnaughMapPanel.java
#
karnaughNoOutputError = No output selected.
karnaughTooManyInputsError = Too many inputs for table.
#
# gui/MinimizedTabPanel.java
#
minimizedFormat = Format:
minimizedSumOfProducts = Sum of products
minimizedProductOfSums = Product of sums
minimizedSetButton = Set As Expression
#
# gui/OutputSelector.java
#
outputSelectLabel = Output:
#
# gui/SimpleTruthTablePanel.java
#
tableEmptyMessage = (empty table)
tableNullHeader = (none)
#
# gui/TableTab.java
#
tableNoInputs = (no inputs)
tableNoOutputs = (no outputs)
#
# gui/TableTabClip.java
#
clipPasteErrorTitle = Paste Error
clipPasteSupportedError = The clipboard contents cannot be pasted into the editor.
clipPasteEndError = The clipboard goes beyond the end of the table.
clipPasteSizeError = Paste region must be same size as clipboard.
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Compacting Rows
#
# gui/VariableListPanel.java
#
variableRemoveButton = Remove
variableMoveUpButton = Move Up
variableMoveDownButton = Move Down
variableAddButton = Add
variableRenameButton = Replace
variableStartError = Name must begin with a letter.
variablePartError = Name cannot contain '%s'.
variableDuplicateError = Name duplicates existing variable.
variableDuplicateError1 = Name duplicates existing variable in %s tab.
variableMaximumError = (Reached maximum size of %s.)
HdlKeyword = Name is a HDL keyword, this is not allowed
InvalidCharacter = Name uses invalid character '%s'.
variableRangeStartPar = Range: Missing staring [
variableRangeMSBWrong = Range: starting [ should be followed by a number
variableRangeWrongSep = Range: MSB index and LSB index must be seperated by ..
variableRangeWrongLB = Range: MSB index must be bigger/equal LSB index
variableRangeFinalPar = Range: missing ] directly after LSB index
variableRangeInvalChar = Range: invalid chars after closing ]
#
# model/Entry.java
#
busError = Conflicting output values in circuit.
oscillateError = Circuit oscillates.
#
# model/Parser.java
#
implicitAndOperator = (Implicit AND)
invalidCharacterError = Unrecognized characters: %s
missingLeftOperandError = Operator %s missing left operand.
missingRightOperandError = Operator %s missing right operand.
lparenMissingError = No matching opening parenthesis.
rparenMissingError = No matching closing parenthesis.
badVariableName = %s is not an input variable.
unexpectedApostrophe = Unexpected apostrophe ("'")

