#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = Die Zeile %d der CSV-Datei'%s' enth\u00e4lt kein Bit %d der Variablen'%s' und bricht ab.
CsvDuplicatedBit = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt doppelt so viel Bit %d wie die Variable '%s' und bricht ab.
CsvDuplicatedVar = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt mehrere Male die Variable '%s' und bricht ab.
CsvIncorrectBitOrder = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt eine falsche Bitfolge f\u00fcr die Variable'%s', die abgebrochen wird.
CsvIncorrectEmpty = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt ein falsches leeres Feld an der Position %d und bricht ab.
CsvIncorrectLine = Die Zeile %d der CSV-Datei '%s' hat %d Eintr\u00e4ge anstelle der erforderlichen %d und bricht ab.
CsvIncorrectVarName = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt das falsch formatierte Label '%s' und wird abgebrochen.
CsvInvalidEntry = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt einen ung\u00fcltigen Eintrag '%s' im Feld %d, der abgebrochen wird.
CsvNoInputsFound = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt keine Eingaben und bricht ab.
CsvNoSepFound = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt kein Trennzeichenfeld und bricht ab.
CsvNotEnoughEmpty = Die Zeile %d der CSV-Datei '%s' enth\u00e4lt nicht gen\u00fcgend leere Felder nach der Variablen '%s' und bricht ab.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (leer)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = german
latexEmpty = Analysator leeren
latexEmptyText = Da der Analysator zum Zeitpunkt der Erstellung dieses Dokuments noch keine Eingangs- und/oder Ausgangsvariablen hatte, gibt es nichts zu zeigen.
latexHeader = Logisim-Evolution generiertes Dokument auf %s
latexIntroduction = Einf\u00fchrung
latexIntroductionText = Dieses Dokument wurde durch logisim-evolution erstellt. Jeder Teil der TeX-Quellen kann problemlos in Ihren eigenen Dokumenten verwendet werden. Falls Sie alle/Teile dieser generierten TeX-Quellen verwenden m\u00f6chten, vergessen Sie bitte (1) nicht, die ben\u00f6tigten Pakete anzugeben, und (2) f\u00fcgen Sie einen Hinweis hinzu, dass diese Quelle durch logisim-evolution generiert wurde.
latexKarnaugh = Karnaugh Diagramme
latexKarnaughEmpty = Leere Karnaugh-Diagramme
latexKarnaughFilledIn = Ausgef\u00fcllt in Karnaugh-Diagrammen
latexKarnaughFilledInGroups = Ausgef\u00fcllt in Karnaugh-Diagrammen mit Abdeckungen
latexKarnaughText = Dieser Abschnitt zeigt verschiedene Versionen der Karnaugh-Diagramme der angegebenen Funktionen.
latexKarnaughToBig = Karnaugh-Diagramme mit mehr als %d Eingangsvariablen k\u00f6nnen nicht angezeigt werden.
latexMinimal = Minimale Ausdr\u00fccke
latexTruthTable = Wahrheitstabelle
latexTruthTableComlete = Vollst\u00e4ndige Wahrheitstabelle
latexTruthTableCompact = Verdichtete Wahrheitstabelle
latexTruthTableText = Die Tabelle kann viel zu gro\u00df sein, um auf der Seite angezeigt zu werden. Zum Zeitpunkt der Generierung wurde keine Berechnung der Gr\u00f6\u00dfe der Tabelle in Bezug auf die Breite / H\u00f6he der Seite durchgef\u00fchrt.
latexTruthTableToBig = \\\\~\\\\Die Wahrheitstabelle hat mehr als %d Eintr\u00e4ge, es macht keinen Sinn, sie hier zu zeigen.
tableLatexFilter = Logisim-Evolution TeX-Dokument (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Logisim-Entwicklung Wahrheitstabelle (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Fehler ignorieren und erneut versuchen?
tableParseErrorTitle = Fehler beim Parsen der Wahrheitstabelle
tableRemark1 = # Wahrheitstabelle
tableRemark2 = # Erzeugt aus der Schaltung %s
tableRemark3 = # Exportiert am %s
tableRemark4 = # Hinweise und Hinweise zur Formatierung:\n# * Sie k\u00f6nnen diese Datei bearbeiten und dann wieder in Logisim importieren!\n# * Alles nach einem'#' ist ein Kommentar und wird ignoriert.\n# * Leerzeilen und Trennzeichen (z.B. ~~~~~~) werden ignoriert.\n# * Halten Sie die Spaltennamen einfach (keine Leerzeichen, Satzzeichen, etc.).\n# *'Name[N..0]' bezeichnet eine N 1 Bit Variable, w\u00e4hrend\n# 'Name' selbst bezeichnet eine 1-Bit-Variable.\n# * Du kannst "x" oder "-" verwenden, um anzugeben, dass "don't care" f\u00fcr beide ist.\n# Ein- und Ausgangsbits.\n# * Sie k\u00f6nnen die bin\u00e4re (z.B. 10100011xxxxxx') Notation verwenden oder\n# oder hex (z.B.'C3x'). Logisim wird herausfinden, wer was ist.
tableTxtFileFilter = Logisim-Entwicklung Wahrheitstabelle (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = Bitte Warten.......
analyzerWindowTitle = Kombinatorik
exportLatexButton = TeX exportieren
exportTableButton = Tabelle exportieren
expressionTab = Ausdruck
expressionTabTip = Logische Ausdr\u00fccke ansehen und bearbeiten.
importTableButton = Tabelle importieren
inputsOutputsTab = Eing\u00e4nge und Ausg\u00e4nge
inputsOutputsTabTip = Eingangs- und Ausgangsvariablen ansehen und bearbeiten.
minimizedTab = Minimierung
minimizedTabTip = Die kleinstm\u00f6glichen Ausdr\u00fccke ansehen und bearbeiten.
tableTab = Tabelle
tableTabTip = Wahrheitstabelle ansehen und bearbeiten.
#
# gui/BuildCircuitButton.java
#
buildCircuitButton = Schaltung aufbauen
buildConfirmReplaceMessage = Sind Sie sicher, da\u00df Sie die Schaltung %s ersetzen m\u00f6chten?
buildConfirmReplaceTitle = Ersetzen best\u00e4tigen
buildDialogErrorTitle = Konnte Schaltung nicht aufbauen
buildDialogTitle = Schaltung aufbauen
buildNameLabel = Schaltungsname:
buildNandsLabel = Nur NAND-Gatter
buildNeedCircuitError = Bitte einen Schaltungsnamen angeben.
buildNeedProjectError = Bitte ein Zielprojekt angeben.
buildProjectLabel = Zielprojekt:
buildTwoInputsLabel = Nur Gatter mit zwei Eing\u00e4ngen
replaceCircuitAction = Schaltung ersetzen
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Weitermachen
cvsFilePreview = Vorschau der ersten vier Zeilen der eingelesenen Datei:
seperatorSpace = (Leertaste)
SeperatorTab = (Tabulator)
UsedQuotesInFile = W\u00e4hlen Sie das Zeichen "quote", das in der csv-Datei verwendet wird:
UsedSeperatorInFile = W\u00e4hlen Sie das Zeichen "Separator", das in der CSV-Datei verwendet wird:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = Kann keine Datei schreiben: %s
confirmOverwriteMessage = Sind Sie sicher, dass Sie die Datei %s \u00fcberschreiben m\u00f6chten?
confirmOverwriteTitle = \u00dcberschreiben best\u00e4tigen
saveButton = Wahrheitstabelle exportieren
saveErrorTitle = Fehler beim Speichern der Datei
#
# gui/ExpressionTab.java
#
cantImportFormatError = Diese Art von Daten kann nicht importiert werden.
outputExpressionEdit = Ausgabeausdr\u00fccke (Doppelklick zum Bearbeiten):
#
# gui/ImportTableButton.java
#
cantReadMessage = Datei kann nicht gelesen werden: %s
DoNotKnowHowto = Ich wei\u00df nicht, wie man die Datei'%s' liest oder schreibt (Erweiterung sollte .txt oder.csv sein).
notFileMessage = Keine Akte: %s
openButton = Wahrheitstabelle importieren
openErrorTitle = Fehler beim Lesen der Datei
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = Keine Eing\u00e4nge vorhanden.
karnaughNoOutputError = Kein Ausgang ausgew\u00e4hlt.
karnaughTooManyInputsError = Zu viele Eing\u00e4nge f\u00fcr die Tabelle.
NoSelectedKmapGroup = Keine Gruppe ausgew\u00e4hlt.
SelectedKmapGroup = Ausgew\u00e4hlte Gruppe:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = Alternative logische
expressionCalc = Berechnung des Ausdrucks
expressionLogicrepresentation = Logisch
expressionMathrepresentation = Mathematisch
ExpressionNotation = Notation:
expressionProgbitsrepresentation = Programmierung mit Bits
expressionProgboolsrepresentation = Programmierung mit Boolean's
KMapLinedStyle = Ausgekleidet
KmapNumberedStyle = Nummeriert
KmapStyle = Stil:
minimizedFormat = Format:
minimizedProductOfSums = Konjunktive Normalform
minimizedSetButton = Als Ausdruck festlegen
minimizedSumOfProducts = Disjunktive Normalform
#
# gui/OutputSelector.java
#
outputSelectLabel = Ausgang:
#
# gui/TableTab.java
#
tableCompact = Duplizierte Zeilen komprimieren
tableExpand = Alle Zeilen anzeigen
tableNoInputs = (keine Eingaben)
tableNoOutputs = (keine Ausg\u00e4nge)
tableRowsShown = %d der angezeigten %d Zeilen
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Zeilen verdichten
#
# gui/TableTabClip.java
#
clipPasteEndError = Der Inhalt der Zwischenablage ist l\u00e4nger als die Tabelle.
clipPasteErrorTitle = Fehler beim Einf\u00fcgen
clipPasteSizeError = Der Einf\u00fcgebereich mu\u00df die gleiche L\u00e4nge wie die Zwischenablage aufweisen.
clipPasteSupportedError = Der Inhalt der Zwischenablage konnte nicht eingef\u00fcgt werden.
#
# gui/VariableTab.java
#
inputVariables = Eingangs Variablen
outputVariables = Ausgangs Variablen
variableClickToAdd = Klicken Sie hier, um eine neue Variable hinzuzuf\u00fcgen.
variableDuplicateError = Eine Variable gleichen namens besteht bereits.
variableMaximumError = (Maximale Gr\u00f6\u00dfe von %s erreicht.)
variablePartError = Der Name darf '%s' nicht enthalten.
variableRangeFinalPar = Bereich: Fehlender ]-Klammer direkt nach dem LSB-Index
variableRangeInvalChar = Bereich: Ung\u00fcltige Zeichen nach dem ]-Klammer
variableRangeMSBWrong = Bereich: [-Klammer sollte von einer Zahl gefolgt werden.
variableRangeStartPar = Bereich: Fehlender [-Klammer
variableRangeWrongLB = Bereich: MSB-Index muss gr\u00f6\u00dfer/gleich LSB-Index sein.
variableRangeWrongSep = Bereich: MSB-Index und LSB-Index m\u00fcssen durch .. getrennt werden.
variableStartError = Name mu\u00df mit einem Buchstaben anfangen.
#
# model/Entry.java
#
busError = Konflikt mit den Ausgangswerten der Schaltung.
oscillateError = Schaltung schwingt.
#
# model/Parser.java
#
badVariableName = %s ist keine Eingangsvariable.
implicitAndOperator = (Implizites AND)
invalidCharacterError = Unbekanntes Zeichen: %s
lparenMissingError = Keine passende \u00f6ffnende Klammer.
missingBraceError = No matching brace: "%s"
missingIdentifierError = Fehlender Identifikator vor dem Index: "%s"
missingLeftOperandError = Fehlender linker Operand f\u00fcr Operator %s.
missingRightOperandError = Fehlender rechter Operand f\u00fcr Operator %s.
missingSubscriptError = Keine passende Klammer: "%s"
rparenMissingError = Keine passende schlie\u00dfende Klammer.
unexpectedApostrophe = Unerwarteter Apostroph ("'")
unexpectedAssignmentError = Unerwarteter Zuweisungsoperator: "%s"
#
# model/Var.java
#
badVariableBitFormError = Der Variablenname muss in der Form 'Name[i]' sein.
badVariableColonError = Der Variablenname muss vor dem ':' erscheinen.
badVariableIndexError = Der Variablebitindex muss eine ganze Zahl sein.
variableFormat = Variablen m\u00fcssen die Form 'Name[N..0]' haben.
variableTooMuchBits = Variablen d\u00fcrfen nicht mehr als 32 Bit breit sein.


