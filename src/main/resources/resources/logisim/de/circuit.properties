#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Erstelle eine Wahrheitstabelle f\u00fcr den Ausdruck, aufgrund von %s.
analyzeCircularError = Zirkelbezug entdeckt; erstelle stattdessen eine Wahrheitstabelle.
analyzeConflictError = Konflikt mit den Ausg\u00e4ngen entdeckt; erstelle stattdessen eine Wahrheitstabelle.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = Symbolausrichtung
circuitAnchor = Anker
#
# appear/AppearancePort.java
#
circuitPort = Port
#
# appear/DynamicElement.java
#
# ==> circuitLabelBottom = 
# ==> circuitLabelCenter = 
# ==> circuitLabelLeft = 
# ==> circuitLabelNone = 
# ==> circuitLabelRight = 
# ==> circuitLabelTop = 
# ==> circuitShowLabelAttr = 
#
# Circuit.java
#
# ==> changeComponentAttributesAction = 
# ==> ComponentLabelCollisionError = 
# ==> ComponentLabelNameError = 
# ==> UsedLabelNameError = 
#
# CircuitAttributes.java
#
# ==> circuitAppearanceAttr = 
# ==> circuitCustomAppearance = 
# ==> circuitIsVhdl = 
circuitLabelAttr = Gemeinsame Beschriftung
circuitLabelDirAttr = Ausrichtung der Beschriftung
circuitLabelFontAttr = Zeichensatz der gemeinsamen Beschriftung
circuitLabelLocAttr = Beschriftung Position
circuitName = Schaltungsname
# ==> circuitNamedBoxFixedSize = 
# ==> circuitVhdlPath = 
# ==> EmptyNameError = 
#
# CircuitMutation.java
#
unknownChangeAction = Schaltung \u00e4ndern
#
# RadixOption.java
#
radix10Signed = Dezimal mit Vorzeichen
radix10Unsigned = Dezimal ohne Vorzeichen
radix16 = Hexadezimal
radix2 = Bin\u00e4r
radix8 = Oktal
radixAttr = Basis
#
# Splitter.java
#
splitterCombinedTip = Gemeinsame Seite des Verteilers
splitterSplit0Tip = Keine Bits von der gemeinsamen Seite
splitterSplit1Tip = Bit %s der gemeinsamen Seite
splitterSplitManyTip = Bits %s der gemeinsamen Seite
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Auftreten
splitterAppearanceCenter = Mittig
splitterAppearanceLeft = Links
splitterAppearanceLegacy = Legacy
splitterAppearanceRight = Rechts
splitterBitAttr = Bit %s
splitterBitNone = Keine
splitterBitWidthAttr = Bitbreite
splitterFanOutAttr = Ausf\u00e4cherung
# ==> splitterSpacing = 
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Aufsteigend verteilen
splitterDistributeDescending = Absteigend verteilen
#
# SplitterFactory.java
#
splitterComponent = Verteiler
#
# SubcircuitFactory.java
#
subcircuitViewItem = %s ansehen
#
# Wire.java
#
wireDirectionAttr = Richtung
wireDirectionHorzOption = Horizontal
wireDirectionVertOption = Vertikal
wireLengthAttr = L\u00e4nge
#
# WireFactory.java
#
wireComponent = Leitung


