#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Obliczanie tabeli prawdy zamiast wyrażenia z powodu %s.
analyzeCircularError = Wykryto zapętlone odwołanie;obliczanie tablicy prawdy wzamian.
analyzeConflictError = Wykryto sprzeczne wyjścia;obliczanie tablicy prawdy wzamian.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = Skierowanie
circuitAnchor = oś
#
# appear/AppearancePort.java
#
circuitPort = Port
#
# appear/DynamicElement.java
#
circuitLabelBottom = Dół
circuitLabelCenter = Środek
circuitLabelLeft = Lewo
circuitLabelNone = Brak Etykiety
circuitLabelRight = Prawo
circuitLabelTop = Góra
circuitShowLabelAttr = Pozycja etykiety
#
# Circuit.java
#
changeComponentAttributesAction = Akcja zmieniająca atrybut elementu
ComponentLabelCollisionError = Jeden elementu w obwodzie ma taką samą etykietę jak nazwa komponentu nowo umieszczonego elementu. Ta etykieta została usunięta!
ComponentLabelEqualCircuitName = Podana etykieta jest równa nazwie układów, jest to niedozwolone. Podaj inną nazwę.
ComponentLabelNameError = Etykieta odpowiada nazwie elementu używanej w układzie!\nProszę używać etykiet, które nie są równe nazwom układów.
UsedLabelNameError = Istnieje już element z tą etykietą!\nProszę używać unikalnych etykiet w obwodzie.
#
# CircuitAttributes.java
#
circuitAppearanceAttr = Wygląd
circuitCustomAppearance = Własne
circuitIsVhdl = Odniesienie do architektury VHDL?
circuitLabelAttr = Napis etykiety
circuitLabelDirAttr = Skierowanie napisu etykiety
circuitLabelFontAttr = Krój napisu etykiety
circuitLabelLocAttr = Lokalizacja etykiety
circuitName = Nazwa Układu
circuitNamedBoxFixedSize = Użyj stałego rozmiaru bloku
CircuitSameInputOutputLabel = Nazwa układu pokrywa się z nazwą wejścia lub wyjścia. Proszę określić inną nazwę układu.
circuitVhdlPath = ścieżka pliku architektury VHDL
EmptyNameError = Każdy układ musi mieć nazwę, nie mogę pozwolić na pustą. Proszę określić nie pustą nazwę układu.
#
# CircuitMutation.java
#
unknownChangeAction = Zamień Układ
#
# RadixOption.java
#
radix10Signed = Dziesiętna ze znakiem
radix10Unsigned = Dziesiętna bez znaku
radix16 = Szesnastkowa
radix2 = Dwójkowa
radix8 = Ósemkowa
radixAttr = System Liczbowy
#
# Splitter.java
#
splitterCombinedTip = Połączony koniec rozdzielacza
splitterSplit0Tip = Brak bitów z połączonego końca
splitterSplit1Tip = Bit %s z połączonego końca
splitterSplitManyTip = Bity %s z połączonego końca
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Wygląd
splitterAppearanceCenter = Wyśrodkowany
splitterAppearanceLeft = Left-handed
splitterAppearanceLegacy = Klasycznie
splitterAppearanceRight = Prawo-ręczny
splitterBitAttr = Bit %s
splitterBitNone = nic
splitterBitWidthAttr = Szerokość bitowa wejścia
splitterFanOutAttr = Wyjścia
splitterSpacing = Rozstaw
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Rozłóż Malejąco
splitterDistributeDescending = Rozłóż Rosnąco
#
# SplitterFactory.java
#
splitterComponent = Rozdzielacz
#
# SubcircuitFactory.java
#
subcircuitViewItem = Otwórz %s
#
# Wire.java
#
wireDirectionAttr = Kierunek
wireDirectionHorzOption = Poziomo
wireDirectionVertOption = Pionowo
wireLengthAttr = Długość
#
# WireFactory.java
#
wireComponent = Przewód


