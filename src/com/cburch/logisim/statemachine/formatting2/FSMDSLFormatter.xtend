/*
 * generated by Xtext
 */
package com.cburch.logisim.statemachine.formatting2

import com.cburch.logisim.statemachine.fSMDSL.CommandStmt
import com.cburch.logisim.statemachine.fSMDSL.ConstantDefList
import com.cburch.logisim.statemachine.services.FSMDSLGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class FSMDSLFormatter extends AbstractFormatter2 {
	
	@Inject extension FSMDSLGrammarAccess

	def dispatch void format(CommandStmt commandStmt, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (constantDef : commandStmt.cst) {
			constantDef.format
		}
		for (port : commandStmt.in) {
			port.format
		}
		for (port : commandStmt.out) {
			port.format
		}
		for (command : commandStmt.commands) {
			command.format
		}
	}

	def dispatch void format(ConstantDefList constantDefList, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (constantDef : constantDefList.constants) {
			constantDef.format
		}
	}
	
	// TODO: implement for PredicateStmt, EQNSpec, EQNAssignement, OrExpr, AndExpr, NotExpr, FSM, InputPort, OutputPort, CommandList, State, Transition, Command, ConcatExpr, PortRef, CmpExpr, ConstantDef
}
