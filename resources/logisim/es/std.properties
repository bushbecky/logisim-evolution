#
# std/Builtin.java
#
builtinLibrary = Incorporada
#
# std/Base.java
#
baseLibrary = Base
#
# std/StdAttr.java
#
stdFacingAttr = Orientación
stdDataWidthAttr = Bits De Datos
stdLabelAttr = Etiqueta
stdLabelFontAttr = Fuente Del Etiquetado


#
# Base library
#
# std/base/BitExtender.java
extenderInAttr = Bits De Entrada
extenderInputType = Entrada

# std/base/Clock.java
clockComponent = Reloj
clockHighAttr = Duración Del Nivel Alto
clockLowAttr = Duración Del Nivel Bajo
clockDurationValue = %s Ticks
clockDurationOneValue = 1 Tick
freqNegativeMessage = El valor tiene que ser un entero positivo
freqInvalidMessage = El valor no es un entero válido

# std/base/Pin.java
pinComponent = Pin
pinInputName = Entrada
pinOutputName = Salida
pinThreeStateAttr = ¿Tres-estados?
pinOutputAttr = ¿Salida?
pinPullAttr = Comportamiento De Pines
pinPullNoneOption = Invariante
pinPullUpOption = Adoptar Nivel Alto
pinPullDownOption = Adoptar Nivel Bajo
pinLabelLocAttr = Posición De La Etiqueta
pinInputToolTip = Añadir pin de entrada
pinOutputToolTip = Añadir pin de salida
pinFrozenTitle = Pin Asociado Al Supercircuito.
pinFrozenQuestion = El pin está relacionado con el estado del circuito. ¿Crear un nuevo estado del circuito?

# std/base/Probe.java
probeComponent = Ver

# std/base/PullResistor.java
pullErrorType = Error

# std/base/Text.java
textComponent = Etiqueta
textTextAttr = Texto
textFontAttr = Fuente
textHorzAlignAttr = Alineamiento Horizontal
textHorzAlignLeftOpt = Izquierda
textHorzAlignRightOpt = Derecha
textHorzAlignCenterOpt = Centro
textVertAlignAttr = Alineamiento Vertical
textVertAlignTopOpt = Arriba
textVertAlignBaseOpt = Base
textVertAlignBottomOpt = Abajo
textVertAlignCenterOpt = Centro

#
# std/Gates.java
#
gatesLibrary = Puertas
gateSizeAttr = Tamaño De Puerta
gateSizeNarrowOpt = Estrecho
gateSizeWideOpt = Ancho
gateInputsAttr = Número De Entradas
# std/Constant.java
constantComponent = Constante
constantValueAttr = Valor
# std/NotGate.java
notGateComponent = Puerta NOT
# std/Buffer.java
bufferComponent = Búffer
# std/AndGate.java
andGateComponent = Puerta AND
# std/NandGate.java
nandGateComponent = Puerta NAND
# std/NorGate.java
norGateComponent = Puerta NOR
# std/OrGate.java
orGateComponent = Puerta OR
# std/XorGate.java
xorGateComponent = Puerta XOR
# std/XnorGate.java
xnorGateComponent = Puerta XNOR
# std/OddParityGate.java
oddParityComponent = Detector Imparidad
# std/EvenParityGate.java
evenParityComponent = Detector Paridad
# std/ControlledBuffer.java
controlledBufferComponent = Búffer Controlado
controlledInverterComponent = Inversor Controlado
#
# std/Memory.java
#
memoryLibrary = Memoria
# AbstractFlipFlop.java
flipFlopClockTip = Entrada de reloj - el estado se actualiza en el flanco de 0 a 1
flipFlopQTip = Último estado del biestable
flipFlopNotQTip = Inverso del último estado del biestable
flipFlopResetTip = Para 1, estado del pin a 0 asíncronamente
flipFlopPresetTip = Para 1, estado del pin a 1 asíncronamente
# std/DFlipFlop.java
dFlipFlopComponent = Biestable D
# std/TFlipFlop.java
tFlipFlopComponent = Biestable T
# std/JKFlipFlop.java
jkFlipFlopComponent = Biestable J-K
# std/SRFlipFlop.java
srFlipFlopComponent = Biestable S-R
# std/Register.java
registerComponent = Registro
registerQTip = Último valor de salida
registerDTip = Valor de entrada - guardado con el flanco de subida
registerClkTip = Reloj - el valor se actualiza en el flanco de 0 a 1
registerClrTip = Clear - Los pins a 1 se ponen a 0 asíncronamente
# std/RomFactory.java
romComponent = ROM
romContentsAttr = Contenidos
romContentsValue = (click para editar)
romChangeAction = Edit Contenidos De La ROM
# std/Ram.java
ramComponent = RAM
ramDataLabel = D
ramAddrLabel = A
ramCSLabel = sel
ramOELabel = out
ramClrLabel = clr
ramAddrWidthAttr = Número De Bits De Dirección
ramDataWidthAttr = Número De Bits De Datos
ramKilobyteLabel = %sKB RAM
ramByteLabel = %sB RAM
romKilobyteLabel = %sKB ROM
romByteLabel = %sB ROM
memDataTip = Entrada o salida de datos de memoria
memAddrTip = Entrada de dirección de memoria
memCSTip = Selección de chip - 0 deshabilita el componente
ramWETip = Reloj - valor de memoria se actualiza en el flanco de 0 a 1
ramOETip = Salida permitida - si 1, se leen datos; si 0, se escriben datos con reloj
ramClrTip = Clear - pins a 1 se ponen a 0 asíncronamente
ramEditMenuItem = Editar Contenidos...
ramClearMenuItem = Borrar Contenidos
ramLoadMenuItem = Cargar Imagen...
ramSaveMenuItem = Salvar Imagen...
ramConfirmClearTitle = Confirmar Borrar
ramConfirmClearMsg = ¿Está seguro de que desea resetear "zero out" la memoria?
ramLoadDialogTitle = Cargar Imagen RAM
ramSaveDialogTitle = Salvar Imagen RAM
ramLoadErrorTitle = Error Al Cargar
ramSaveErrorTitle = Error Al Salvar
#
# std/Plexers.java
#
plexerLibrary = Plexores
plexerSelectBitsAttr = Seleccionar Bits
plexerThreeStateAttr = ¿Tercer Estado?
# std/Multiplexer.java
multiplexerComponent = Multiplexor
multiplexerSelectTip = Seleccionar índice de entrada
multiplexerInTip = Entrada %s
multiplexerOutTip = Salida del multiplexor
# std/Demultiplexer.java
demultiplexerComponent = Demultiplexor
demultiplexerSelectTip = Seleccionar índice de salida
demultiplexerInTip = Entrada del demultiplexor
demultiplexerOutTip = Salida %s
# std/Decoder.java
decoderComponent = Decodficador
decoderSelectTip = Seleccionar índice de salida
decoderOutTip = Salida %s
# std/BitSelector.java
bitSelectorComponent = Selector De Bit
bitSelectorGroupAttr = Bits De Salida
bitSelectorOutputTip = Grupo de bits de salida de los datos de entrada
bitSelectorDataTip = Datos de entrada
bitSelectorSelectTip = Selecciona el grupo de salida
# std/plexers/PriorityEncoder.java
priorityEncoderInTip = Entrada %s
#
# arith/Arithmetic.java
#
arithmeticLibrary = Aritmética
# arith/Adder.java
adderComponent = Sumador
# arith/Subtractor.java
subtractorComponent = Restador
# arith/Multiplier.java
multiplierComponent = Multiplicador
# arith/Divider.java
dividerComponent = Divisor
dividerUpperInput = superior
dividerRemainderOutput = resto
# arith/Negator.java
negatorComponent = Negador
# arith/Comparator.java
comparatorComponent = Comparador
comparatorType = Tipo Numérico
unsignedOption = Sin Signo
twosComplementOption = 2's Complemento
#
# io
#
ioBitWidthAttr = Número De Bits
ioLabelCenter = Centro
ioLabelLocAttr = Posición De La Etiqueta
# io/Io.java
#ioLibrary = Input/Output
ioLabelCenter = Centro
#ioColorAttr = Color
ioLabelLocAttr = Posición De La Etiqueta
#ioLabelColorAttr = Label Color
# io/Button.java
#buttonComponent = Button
# io/Led.java
#ledComponent = LED
# io/SevenSegment.java
#sevenSegmentComponent = 7-Segment Display
